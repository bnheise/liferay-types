{
  "components" : {
    "schemas" : {
      "BlogPostingImage" : {
        "properties" : {
          "contentUrl" : {
            "description" : "The image's relative URL.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentValue" : {
            "description" : "optional field with the content of the image in Base64, can be embedded with nestedFields",
            "readOnly" : true,
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The image's content type (e.g., `application/png`, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "fileExtension" : {
            "description" : "The image's file extension.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The image's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "sizeInBytes" : {
            "description" : "The image's size in bytes.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "title" : {
            "description" : "The image's title text.",
            "type" : "string"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.BlogPostingImage",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "BlogPostingImage"
        }
      },
      "Facet" : {
        "properties" : {
          "facetCriteria" : {
            "type" : "string"
          },
          "facetValues" : {
            "items" : {
              "$ref" : "#/components/schemas/FacetValue"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FacetValue" : {
        "properties" : {
          "numberOfOccurrences" : {
            "format" : "int32",
            "type" : "integer"
          },
          "term" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PageBlogPostingImage" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BlogPostingImage"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "MultipartBody" : {
        "properties" : {
          "values" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "AggregateRating" : {
        "description" : "The blog post's average rating.",
        "properties" : {
          "bestRating" : {
            "description" : "The highest possible rating (by default normalized to 1.0).",
            "format" : "double",
            "readOnly" : true,
            "type" : "number"
          },
          "ratingAverage" : {
            "description" : "The average rating.",
            "format" : "double",
            "readOnly" : true,
            "type" : "number"
          },
          "ratingCount" : {
            "description" : "The number of ratings.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "ratingValue" : {
            "description" : "The rating value.",
            "format" : "double",
            "readOnly" : true,
            "type" : "number"
          },
          "worstRating" : {
            "description" : "The lowest possible rating (by default normalized to 0.0).",
            "format" : "double",
            "readOnly" : true,
            "type" : "number"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.AggregateRating",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "AggregateRating"
        }
      },
      "BlogPosting" : {
        "description" : "Represents a blog post. See [BlogPosting](https://www.schema.org/BlogPosting) for more information.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "aggregateRating" : {
            "$ref" : "#/components/schemas/AggregateRating"
          },
          "alternativeHeadline" : {
            "description" : "The blog post's subtitle.",
            "type" : "string"
          },
          "articleBody" : {
            "description" : "The blog post's body (content).",
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the blog post.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The blog post's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The blog post's most recent modification date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "datePublished" : {
            "description" : "The blog post's publication date.",
            "format" : "date-time",
            "type" : "string"
          },
          "description" : {
            "description" : "The blog post's description.",
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The blog post's media format (e.g., HTML, BBCode, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The blog post's external reference code.",
            "type" : "string"
          },
          "friendlyUrlPath" : {
            "description" : "The blog post's relative URL.",
            "type" : "string"
          },
          "headline" : {
            "description" : "The blog post's main title.",
            "type" : "string"
          },
          "id" : {
            "description" : "The blog post's identifier.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "image" : {
            "$ref" : "#/components/schemas/Image"
          },
          "keywords" : {
            "description" : "A list of keywords describing the blog post.",
            "items" : {
              "description" : "A list of keywords describing the blog post.",
              "type" : "string"
            },
            "type" : "array"
          },
          "numberOfComments" : {
            "description" : "The number of comments this blog post has received.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "relatedContents" : {
            "description" : "A list of related contents to this blog post.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "renderedContents" : {
            "description" : "A list of rendered blogs posts, which results from using a display page to process the blogs post and return HTML.",
            "items" : {
              "$ref" : "#/components/schemas/RenderedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "siteId" : {
            "description" : "The ID of the site to which this blog post is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "taxonomyCategoryBriefs" : {
            "description" : "The categories associated with this blog post.",
            "items" : {
              "$ref" : "#/components/schemas/TaxonomyCategoryBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "taxonomyCategoryIds" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "writeOnly" : true
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.BlogPosting",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "articleBody", "headline" ],
        "type" : "object",
        "xml" : {
          "name" : "BlogPosting"
        }
      },
      "Creator" : {
        "description" : "The wiki page's creator.",
        "properties" : {
          "additionalName" : {
            "description" : "The author's additional name (e.g., middle name).",
            "readOnly" : true,
            "type" : "string"
          },
          "contentType" : {
            "description" : "The type of the content.",
            "readOnly" : true,
            "type" : "string"
          },
          "familyName" : {
            "description" : "The author's surname.",
            "readOnly" : true,
            "type" : "string"
          },
          "givenName" : {
            "description" : "The author's first name.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The author's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "image" : {
            "description" : "A relative URL to the author's profile image.",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "The author's full name.",
            "readOnly" : true,
            "type" : "string"
          },
          "profileURL" : {
            "description" : "A relative URL to the author's user profile. Optional field, can be embedded with nestedFields.",
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Creator",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Creator"
        }
      },
      "CustomField" : {
        "description" : "A list of the custom fields associated with the wiki page.",
        "properties" : {
          "customValue" : {
            "$ref" : "#/components/schemas/CustomValue"
          },
          "dataType" : {
            "description" : "The field type (e.g., image, text, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "The field's internal name. This is valid for comparisons and unique in the structured content.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.CustomField",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "CustomField"
        }
      },
      "CustomValue" : {
        "description" : "The field's value.",
        "properties" : {
          "data" : {
            "description" : "The field's content value for simple types.",
            "type" : "object"
          },
          "data_i18n" : {
            "additionalProperties" : {
              "description" : "The localized field's content values for simple types.",
              "type" : "string"
            },
            "description" : "The localized field's content values for simple types.",
            "type" : "object"
          },
          "geo" : {
            "$ref" : "#/components/schemas/Geo"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.CustomValue",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "CustomValue"
        }
      },
      "Geo" : {
        "description" : "A point determined by latitude and longitude.",
        "properties" : {
          "latitude" : {
            "description" : "The latitude of a point in space.",
            "format" : "double",
            "type" : "number"
          },
          "longitude" : {
            "description" : "The longitude of a point in space.",
            "format" : "double",
            "type" : "number"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Geo",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Geo"
        }
      },
      "Image" : {
        "description" : "The blog post's cover image.",
        "properties" : {
          "caption" : {
            "description" : "The text describing the image.",
            "type" : "string"
          },
          "contentUrl" : {
            "description" : "The image's relative URL.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentValue" : {
            "description" : "optional field with the content of the image in Base64, can be embedded with nestedFields",
            "readOnly" : true,
            "type" : "string"
          },
          "imageId" : {
            "description" : "The image's ID. This can be used to retrieve more information in the `Document` API.",
            "format" : "int64",
            "type" : "integer"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Image",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Image"
        }
      },
      "RelatedContent" : {
        "description" : "A list of related contents to this wiki page.",
        "properties" : {
          "contentType" : {
            "description" : "The type of the content.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The identifier of the resource.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "title" : {
            "description" : "The title of the content.",
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.RelatedContent",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "RelatedContent"
        }
      },
      "RenderedContent" : {
        "description" : "A list of rendered content, which results from using a template to process the content and return HTML.",
        "properties" : {
          "contentTemplateId" : {
            "description" : "The ID of the template or display page used to render the content.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentTemplateName" : {
            "description" : "The name of the template or display page used to render the content.",
            "type" : "string"
          },
          "contentTemplateName_i18n" : {
            "additionalProperties" : {
              "description" : "The localized names of the template or display page used to render the content.",
              "type" : "string"
            },
            "description" : "The localized names of the template or display page used to render the content.",
            "type" : "object"
          },
          "markedAsDefault" : {
            "description" : "Specifies if the template or display page are marked as default to display the content.",
            "type" : "boolean"
          },
          "renderedContentURL" : {
            "description" : "An absolute URL to the rendered content.",
            "type" : "string"
          },
          "renderedContentValue" : {
            "description" : "Optional field with the rendered content, can be embedded with nestedFields.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.RenderedContent",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "RenderedContent"
        }
      },
      "TaxonomyCategoryBrief" : {
        "description" : "The categories associated with this wiki page.",
        "properties" : {
          "embeddedTaxonomyCategory" : {
            "description" : "Optional field with the embedded taxonomy category, can be embedded with nestedFields",
            "readOnly" : true,
            "type" : "object"
          },
          "taxonomyCategoryId" : {
            "description" : "The category's ID. This can be used to retrieve more information in the `TaxonomyCategory` API.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "taxonomyCategoryName" : {
            "description" : "The category's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "taxonomyCategoryName_i18n" : {
            "additionalProperties" : {
              "description" : "The localized category's names.",
              "type" : "string"
            },
            "description" : "The localized category's names.",
            "readOnly" : true,
            "type" : "object"
          },
          "taxonomyCategoryReference" : {
            "$ref" : "#/components/schemas/TaxonomyCategoryReference"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.TaxonomyCategoryBrief",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "TaxonomyCategoryBrief"
        }
      },
      "TaxonomyCategoryReference" : {
        "description" : "A unique reference to a taxonomy category.",
        "enum" : [ "externalReferenceCode" ],
        "properties" : {
          "externalReferenceCode" : {
            "description" : "The taxonomy category's external reference code.",
            "type" : "string"
          },
          "siteKey" : {
            "description" : "The key of the site or asset library where the taxonomy category is located. It can be left out if the taxonomy category is in the same site as the page.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.TaxonomyCategoryReference",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "externalReferenceCode" ],
        "type" : "object",
        "xml" : {
          "name" : "TaxonomyCategoryReference"
        }
      },
      "Rating" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "bestRating" : {
            "description" : "The best possible rating an asset can receive (normalized to 1.0 by default).",
            "format" : "double",
            "readOnly" : true,
            "type" : "number"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "dateCreated" : {
            "description" : "The rating's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time a field of the rating changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The rating's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "ratingValue" : {
            "description" : "The rating's value.",
            "format" : "double",
            "type" : "number"
          },
          "worstRating" : {
            "description" : "The worst possible rating an asset can receive (normalized to 0.0 by default).",
            "format" : "double",
            "readOnly" : true,
            "type" : "number"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Rating",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Rating"
        }
      },
      "PageBlogPosting" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BlogPosting"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "PagePermission" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Permission" : {
        "properties" : {
          "actionIds" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "roleName" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Permission"
        }
      },
      "Comment" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "dateCreated" : {
            "description" : "The comment's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The comment's latest modification date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The comment's external reference code.",
            "type" : "string"
          },
          "id" : {
            "description" : "The comment's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfComments" : {
            "description" : "The number of child comments on this comment.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "parentCommentId" : {
            "description" : "the ID of the comment's parent, if it exists.",
            "format" : "int64",
            "type" : "integer"
          },
          "text" : {
            "description" : "The comment's text content.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Comment",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Comment"
        }
      },
      "PageComment" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "ContentElement" : {
        "properties" : {
          "content" : {
            "description" : "The content's fields.",
            "readOnly" : true,
            "type" : "object"
          },
          "contentType" : {
            "description" : "The content set element's type.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The content set element's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "title" : {
            "description" : "The content's title.",
            "readOnly" : true,
            "type" : "string"
          },
          "title_i18n" : {
            "additionalProperties" : {
              "description" : "The localized content's titles.",
              "type" : "string"
            },
            "description" : "The localized content's titles.",
            "readOnly" : true,
            "type" : "object"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ContentElement",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ContentElement"
        }
      },
      "PageContentElement" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/ContentElement"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "ContentSetElement" : {
        "properties" : {
          "content" : {
            "description" : "The content's fields.",
            "readOnly" : true,
            "type" : "object"
          },
          "contentType" : {
            "description" : "The content set element's type.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The content set element's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "title" : {
            "description" : "The content's title.",
            "readOnly" : true,
            "type" : "string"
          },
          "title_i18n" : {
            "additionalProperties" : {
              "description" : "The localized content's titles.",
              "type" : "string"
            },
            "description" : "The localized content's titles.",
            "readOnly" : true,
            "type" : "object"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ContentSetElement",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ContentSetElement"
        }
      },
      "PageContentSetElement" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/ContentSetElement"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "ContentStructure" : {
        "properties" : {
          "assetLibraryKey" : {
            "description" : "The key of the asset library to which the content structure is scoped.",
            "readOnly" : true,
            "type" : "string"
          },
          "availableLanguages" : {
            "description" : "The list of languages the content structure has a translation for.",
            "items" : {
              "description" : "The list of languages the content structure has a translation for.",
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "contentStructureFields" : {
            "description" : "The list of the content structure's fields.",
            "items" : {
              "$ref" : "#/components/schemas/ContentStructureField"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "dateCreated" : {
            "description" : "The content structure's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time a field of the content structure changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The content structure's description.",
            "readOnly" : true,
            "type" : "string"
          },
          "description_i18n" : {
            "additionalProperties" : {
              "description" : "The localized content structure's description.",
              "type" : "string"
            },
            "description" : "The localized content structure's description.",
            "readOnly" : true,
            "type" : "object"
          },
          "id" : {
            "description" : "The content structure's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The content structure's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "description" : "The localized content structure's names.",
              "type" : "string"
            },
            "description" : "The localized content structure's names.",
            "readOnly" : true,
            "type" : "object"
          },
          "siteId" : {
            "description" : "The ID of the site to which the content structure is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ContentStructure",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ContentStructure"
        }
      },
      "ContentStructureField" : {
        "description" : "The list of the content structure's fields.",
        "properties" : {
          "dataType" : {
            "description" : "The form field's type (e.g., date, geolocation, text, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "inputControl" : {
            "description" : "The form field's input control type (e.g., text, textarea, select field, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "label" : {
            "description" : "The form field's label.",
            "readOnly" : true,
            "type" : "string"
          },
          "label_i18n" : {
            "additionalProperties" : {
              "description" : "The form field's labels.",
              "type" : "string"
            },
            "description" : "The form field's labels.",
            "readOnly" : true,
            "type" : "object"
          },
          "localizable" : {
            "description" : "A flag that indicates whether the content is accessible in different languages.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "multiple" : {
            "description" : "A flag that indicates whether the form field can have several values.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "name" : {
            "description" : "The form field's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "nestedContentStructureFields" : {
            "description" : "The child content structure fields that depend on this form field.",
            "items" : {
              "$ref" : "#/components/schemas/ContentStructureField"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "options" : {
            "description" : "The list of different possible values.",
            "items" : {
              "$ref" : "#/components/schemas/Option"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "predefinedValue" : {
            "description" : "The form field's default value.",
            "readOnly" : true,
            "type" : "string"
          },
          "predefinedValue_i18n" : {
            "additionalProperties" : {
              "description" : "The localized form field's default values.",
              "type" : "string"
            },
            "description" : "The localized form field's default values.",
            "readOnly" : true,
            "type" : "object"
          },
          "repeatable" : {
            "description" : "A flag that indicates whether this content can be rendered (and answered) several times.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "required" : {
            "description" : "A flag that indicates whether this form field is required.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "showLabel" : {
            "description" : "A flag that indicates whether the structure's end target should render the field label.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ContentStructureField",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ContentStructureField"
        }
      },
      "Option" : {
        "description" : "The list of different possible values.",
        "properties" : {
          "label" : {
            "description" : "The option's label.",
            "type" : "string"
          },
          "label_i18n" : {
            "additionalProperties" : {
              "description" : "The localized option's labels.",
              "type" : "string"
            },
            "description" : "The localized option's labels.",
            "type" : "object"
          },
          "value" : {
            "description" : "The internal value of the field option.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Option",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Option"
        }
      },
      "PageContentStructure" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/ContentStructure"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "ContentTemplate" : {
        "description" : "Represents a content template.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "assetLibraryKey" : {
            "description" : "The key of the asset library to which the content template is scoped.",
            "readOnly" : true,
            "type" : "string"
          },
          "availableLanguages" : {
            "description" : "The list of languages the content template has a translation for.",
            "items" : {
              "description" : "The list of languages the content template has a translation for.",
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "contentStructureId" : {
            "description" : "The ID of the `ContentStructure`.",
            "format" : "int64",
            "type" : "integer"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "dateCreated" : {
            "description" : "The content template's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time the content template changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "the content template's description.",
            "type" : "string"
          },
          "description_i18n" : {
            "additionalProperties" : {
              "description" : "the localized content template's descriptions.",
              "type" : "string"
            },
            "description" : "the localized content template's descriptions.",
            "type" : "object"
          },
          "id" : {
            "description" : "The content template's ID.",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "the content template's name.",
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "description" : "the localized content template's name.",
              "type" : "string"
            },
            "description" : "the localized content template's name.",
            "type" : "object"
          },
          "programmingLanguage" : {
            "description" : "the content template's programming language.",
            "type" : "string"
          },
          "siteId" : {
            "description" : "The ID of the site to which the content template is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "templateScript" : {
            "description" : "The content template's script.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ContentTemplate",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "contentStructureId", "name" ],
        "type" : "object",
        "xml" : {
          "name" : "ContentTemplate"
        }
      },
      "PageContentTemplate" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/ContentTemplate"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "DocumentFolder" : {
        "description" : "Represents a document folder that can contain documents and other folders.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "assetLibraryKey" : {
            "description" : "The key of the asset library to which the folder is scoped.",
            "readOnly" : true,
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the folder.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The folder's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time a field of the folder changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The folder's description.",
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The document folder's external reference code.",
            "type" : "string"
          },
          "id" : {
            "description" : "The folder's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The folder's main title/name.",
            "type" : "string"
          },
          "numberOfDocumentFolders" : {
            "description" : "The number of this folder's child folders.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfDocuments" : {
            "description" : "The number of documents in this folder.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "parentDocumentFolderId" : {
            "description" : "The ID of the folder's parent, if it exists.",
            "format" : "int64",
            "type" : "integer"
          },
          "siteId" : {
            "description" : "The ID of the site to which this folder is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "subscribed" : {
            "description" : "A flag that indicates whether the user making the requests is subscribed to this folder.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.DocumentFolder",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object",
        "xml" : {
          "name" : "DocumentFolder"
        }
      },
      "PageDocumentFolder" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/DocumentFolder"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "AdaptedImage" : {
        "description" : "An array of images in several resolutions and sizes, created by the Adaptive Media framework.",
        "properties" : {
          "contentUrl" : {
            "description" : "The image's relative URL.",
            "type" : "string"
          },
          "contentValue" : {
            "description" : "Optional field with the content of the image in Base64, can be embedded with nestedFields.",
            "readOnly" : true,
            "type" : "string"
          },
          "height" : {
            "description" : "The image's height in pixels.",
            "format" : "int32",
            "type" : "integer"
          },
          "resolutionName" : {
            "description" : "The name of the image's Adaptive Media image resolution.",
            "type" : "string"
          },
          "sizeInBytes" : {
            "description" : "The image's size in bytes.",
            "format" : "int64",
            "type" : "integer"
          },
          "width" : {
            "description" : "The image's width in pixels.",
            "format" : "int32",
            "type" : "integer"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.AdaptedImage",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "AdaptedImage"
        }
      },
      "ContentDocument" : {
        "description" : "A content document element that stores an image file.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "contentType" : {
            "description" : "The type of content.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentUrl" : {
            "description" : "The document's relative URL.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentValue" : {
            "description" : "optional field with the content of the document in Base64, can be embedded with nestedFields",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The document's description.",
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The document's content type (e.g., `application/pdf`, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "fileExtension" : {
            "description" : "The document's file extension.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The document's ID.",
            "format" : "int64",
            "type" : "integer"
          },
          "sizeInBytes" : {
            "description" : "The document's file size in bytes.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "title" : {
            "description" : "The document's title.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ContentDocument",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ContentDocument"
        }
      },
      "ContentField" : {
        "description" : "The list of fields that store the structured content's information.",
        "properties" : {
          "contentFieldValue" : {
            "$ref" : "#/components/schemas/ContentFieldValue"
          },
          "contentFieldValue_i18n" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ContentFieldValue"
            },
            "description" : "The localized field's values.",
            "type" : "object"
          },
          "dataType" : {
            "description" : "The field type (e.g., image, text, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "inputControl" : {
            "description" : "The field's control type (e.g., text, text area, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "label" : {
            "description" : "The field's label.",
            "readOnly" : true,
            "type" : "string"
          },
          "label_i18n" : {
            "additionalProperties" : {
              "description" : "The localized field's labels.",
              "type" : "string"
            },
            "description" : "The localized field's labels.",
            "readOnly" : true,
            "type" : "object"
          },
          "name" : {
            "description" : "The field's internal name. This is valid for comparisons and unique in the structured content.",
            "type" : "string"
          },
          "nestedContentFields" : {
            "description" : "A list of child content fields that depend on this resource.",
            "items" : {
              "$ref" : "#/components/schemas/ContentField"
            },
            "type" : "array"
          },
          "repeatable" : {
            "description" : "A flag that indicates whether this field can be rendered multiple times.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ContentField",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ContentField"
        }
      },
      "ContentFieldValue" : {
        "description" : "The localized field's values.",
        "properties" : {
          "data" : {
            "description" : "The field's content for simple types.",
            "type" : "string"
          },
          "document" : {
            "$ref" : "#/components/schemas/ContentDocument"
          },
          "geo" : {
            "$ref" : "#/components/schemas/Geo"
          },
          "image" : {
            "$ref" : "#/components/schemas/ContentDocument"
          },
          "link" : {
            "description" : "A link to a page on the server.",
            "type" : "string"
          },
          "structuredContentLink" : {
            "$ref" : "#/components/schemas/StructuredContentLink"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ContentFieldValue",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ContentFieldValue"
        }
      },
      "Document" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "adaptedImages" : {
            "description" : "An array of images in several resolutions and sizes, created by the Adaptive Media framework.",
            "items" : {
              "$ref" : "#/components/schemas/AdaptedImage"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "aggregateRating" : {
            "$ref" : "#/components/schemas/AggregateRating"
          },
          "assetLibraryKey" : {
            "description" : "The key of the asset library to which the document is scoped.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentUrl" : {
            "description" : "The document's relative URL.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentValue" : {
            "description" : "The optional field with the content of the document in Base64, can be embedded with nestedFields.",
            "readOnly" : true,
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the document.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The document's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time a field of the document changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The document's description.",
            "type" : "string"
          },
          "documentFolderId" : {
            "description" : "The ID of the `DocumentFolder` where this document is stored.",
            "format" : "int64",
            "type" : "integer"
          },
          "documentType" : {
            "$ref" : "#/components/schemas/DocumentType"
          },
          "encodingFormat" : {
            "description" : "The document's content type (e.g., `application/pdf`, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The document's external reference code.",
            "type" : "string"
          },
          "fileExtension" : {
            "description" : "The document's file extension.",
            "readOnly" : true,
            "type" : "string"
          },
          "fileName" : {
            "description" : "The document's file name.",
            "type" : "string"
          },
          "id" : {
            "description" : "The document's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "keywords" : {
            "description" : "A list of keywords describing the document.",
            "items" : {
              "description" : "A list of keywords describing the document.",
              "type" : "string"
            },
            "type" : "array"
          },
          "numberOfComments" : {
            "description" : "The number of comments on the document.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "relatedContents" : {
            "description" : "A list of related contents to this document.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "renderedContents" : {
            "description" : "A list of rendered documents, which results from using a display page to process the document and return HTML.",
            "items" : {
              "$ref" : "#/components/schemas/RenderedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "siteId" : {
            "description" : "The ID of the site to which this document is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "sizeInBytes" : {
            "description" : "The document's size in bytes.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "taxonomyCategoryBriefs" : {
            "description" : "The categories associated with this document.",
            "items" : {
              "$ref" : "#/components/schemas/TaxonomyCategoryBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "taxonomyCategoryIds" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "writeOnly" : true
          },
          "title" : {
            "description" : "The document's main title/name.",
            "type" : "string"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Document",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Document"
        }
      },
      "DocumentType" : {
        "properties" : {
          "availableLanguages" : {
            "description" : "The list of languages the document type has a translation for.",
            "items" : {
              "description" : "The list of languages the document type has a translation for.",
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "contentFields" : {
            "description" : "The list of content fields the document type has.",
            "items" : {
              "$ref" : "#/components/schemas/ContentField"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "The document type's description.",
            "type" : "string"
          },
          "description_i18n" : {
            "additionalProperties" : {
              "description" : "The localized document type's description.",
              "type" : "string"
            },
            "description" : "The localized document type's description.",
            "readOnly" : true,
            "type" : "object"
          },
          "name" : {
            "description" : "The document type's name.",
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "description" : "The localized document type's name.",
              "type" : "string"
            },
            "description" : "The localized document type's name.",
            "readOnly" : true,
            "type" : "object"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.DocumentType",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "DocumentType"
        }
      },
      "StructuredContent" : {
        "description" : "Represents content that has fields and is rendered by a template backed by a `ContentStructure`. This is modeled internally as a `JournalArticle`.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "aggregateRating" : {
            "$ref" : "#/components/schemas/AggregateRating"
          },
          "assetLibraryKey" : {
            "description" : "The key of the asset library to which the structure content is scoped.",
            "readOnly" : true,
            "type" : "string"
          },
          "availableLanguages" : {
            "description" : "The list of languages the structured content has a translation for.",
            "items" : {
              "description" : "The list of languages the structured content has a translation for.",
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "contentFields" : {
            "description" : "The list of fields that store the structured content's information.",
            "items" : {
              "$ref" : "#/components/schemas/ContentField"
            },
            "type" : "array"
          },
          "contentStructureId" : {
            "description" : "The ID of the `ContentStructure`.",
            "format" : "int64",
            "type" : "integer"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the structured content.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The structured content's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time any field of the structured content was changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "datePublished" : {
            "description" : "The structured content's most recent publication date.",
            "format" : "date-time",
            "type" : "string"
          },
          "description" : {
            "description" : "The structured content's description.",
            "type" : "string"
          },
          "description_i18n" : {
            "additionalProperties" : {
              "description" : "The localized structured content's descriptions.",
              "type" : "string"
            },
            "description" : "The localized structured content's descriptions.",
            "type" : "object"
          },
          "externalReferenceCode" : {
            "description" : "The structured content's external reference code.",
            "type" : "string"
          },
          "friendlyUrlPath" : {
            "description" : "A relative URL to the structured content's rendered content.",
            "type" : "string"
          },
          "friendlyUrlPath_i18n" : {
            "additionalProperties" : {
              "description" : "The localized relative URLs to the structured content's rendered content.",
              "type" : "string"
            },
            "description" : "The localized relative URLs to the structured content's rendered content.",
            "type" : "object"
          },
          "id" : {
            "description" : "The structured content's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "key" : {
            "description" : "An identifier, independent of the database, that can be used to reference the structured content.",
            "readOnly" : true,
            "type" : "string"
          },
          "keywords" : {
            "description" : "A list of keywords describing the structured content.",
            "items" : {
              "description" : "A list of keywords describing the structured content.",
              "type" : "string"
            },
            "type" : "array"
          },
          "numberOfComments" : {
            "description" : "The number of comments the structured content has received.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "priority" : {
            "description" : "The structured content's priority.",
            "format" : "double",
            "type" : "number"
          },
          "relatedContents" : {
            "description" : "A list of related contents to this structured content.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "renderedContents" : {
            "description" : "A list of rendered content, which results from using a template to process the content and return HTML.",
            "items" : {
              "$ref" : "#/components/schemas/RenderedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "siteId" : {
            "description" : "The ID of the site to which this structured content is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "structuredContentFolderId" : {
            "description" : "The ID of the folder where structured content is stored.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "subscribed" : {
            "description" : "A flag that indicates whether the user making the requests is subscribed to this structured content.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "taxonomyCategoryBriefs" : {
            "description" : "The categories associated with this structured content.",
            "items" : {
              "$ref" : "#/components/schemas/TaxonomyCategoryBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "taxonomyCategoryIds" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "writeOnly" : true
          },
          "title" : {
            "description" : "The structured content's main title.",
            "type" : "string"
          },
          "title_i18n" : {
            "additionalProperties" : {
              "description" : "The localized structured content's main titles.",
              "type" : "string"
            },
            "description" : "The localized structured content's main titles.",
            "type" : "object"
          },
          "uuid" : {
            "description" : "A valid external identifier to reference this structured content.",
            "readOnly" : true,
            "type" : "string"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.StructuredContent",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "contentStructureId", "title" ],
        "type" : "object",
        "xml" : {
          "name" : "StructuredContent"
        }
      },
      "StructuredContentLink" : {
        "description" : "A link to structured content on the server.",
        "properties" : {
          "contentType" : {
            "description" : "The type of content.",
            "readOnly" : true,
            "type" : "string"
          },
          "embeddedStructuredContent" : {
            "$ref" : "#/components/schemas/StructuredContent"
          },
          "id" : {
            "description" : "The resource's ID.",
            "format" : "int64",
            "type" : "integer"
          },
          "title" : {
            "description" : "The resource's title.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.StructuredContentLink",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "StructuredContentLink"
        }
      },
      "PageDocument" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Document"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "KnowledgeBaseArticle" : {
        "description" : "Represents a Knowledge Base article (`KBArticle`), the main entity in the Knowledge Base API.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "aggregateRating" : {
            "$ref" : "#/components/schemas/AggregateRating"
          },
          "articleBody" : {
            "description" : "The article's main content.",
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the article.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The date the article was created.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time the article's content or metadata changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The article's description.",
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The article's media type (e.g., HTML, BBCode, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The article's external reference code.",
            "type" : "string"
          },
          "friendlyUrlPath" : {
            "description" : "The article's relative URL.",
            "type" : "string"
          },
          "id" : {
            "description" : "The article's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "keywords" : {
            "description" : "A list of keywords describing the article.",
            "items" : {
              "description" : "A list of keywords describing the article.",
              "type" : "string"
            },
            "type" : "array"
          },
          "numberOfAttachments" : {
            "description" : "The article's number attachments.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfKnowledgeBaseArticles" : {
            "description" : "The number of this article's child articles.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "parentKnowledgeBaseArticleId" : {
            "description" : "The ID of the article's parent, if it exists.",
            "format" : "int64",
            "type" : "integer"
          },
          "parentKnowledgeBaseFolder" : {
            "$ref" : "#/components/schemas/ParentKnowledgeBaseFolder"
          },
          "parentKnowledgeBaseFolderId" : {
            "format" : "int64",
            "type" : "integer",
            "writeOnly" : true
          },
          "relatedContents" : {
            "description" : "A list of related contents to this article.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "siteId" : {
            "description" : "The ID of the site to which this article is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "subscribed" : {
            "description" : "A flag that indicates whether the user making the requests is subscribed to this article.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "taxonomyCategoryBriefs" : {
            "description" : "The categories associated with this article.",
            "items" : {
              "$ref" : "#/components/schemas/TaxonomyCategoryBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "taxonomyCategoryIds" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "writeOnly" : true
          },
          "title" : {
            "description" : "The article's main title.",
            "type" : "string"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.KnowledgeBaseArticle",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "articleBody", "title" ],
        "type" : "object",
        "xml" : {
          "name" : "KnowledgeBaseArticle"
        }
      },
      "ParentKnowledgeBaseFolder" : {
        "description" : "The folder's parent Knowledge Base folder, if it exists.",
        "properties" : {
          "folderId" : {
            "description" : "The parent folder's ID.",
            "format" : "int64",
            "type" : "integer"
          },
          "folderName" : {
            "description" : "The parent folder's name.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ParentKnowledgeBaseFolder",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ParentKnowledgeBaseFolder"
        }
      },
      "PageKnowledgeBaseArticle" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/KnowledgeBaseArticle"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "KnowledgeBaseAttachment" : {
        "properties" : {
          "contentUrl" : {
            "description" : "The file's relative URL.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentValue" : {
            "description" : "optional field with the content of the document in Base64, can be embedded with nestedFields",
            "readOnly" : true,
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The file's media type (e.g., application/pdf, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The attachment's external reference code.",
            "type" : "string"
          },
          "fileExtension" : {
            "description" : "The file's extension.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The file's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "sizeInBytes" : {
            "description" : "The file's size in bytes.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "title" : {
            "description" : "The file's main title.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.KnowledgeBaseAttachment",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "KnowledgeBaseAttachment"
        }
      },
      "PageKnowledgeBaseAttachment" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/KnowledgeBaseAttachment"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "KnowledgeBaseFolder" : {
        "description" : "Represents a folder for organizing Knowledge Base articles.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the folder.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The date the folder was created.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time the folder was modified.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The folder's description.",
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The folder's external reference code.",
            "type" : "string"
          },
          "id" : {
            "description" : "The folder's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The folder's main title/name.",
            "type" : "string"
          },
          "numberOfKnowledgeBaseArticles" : {
            "description" : "The number of Knowledge Base articles in this folder.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfKnowledgeBaseFolders" : {
            "description" : "The number of Knowledge Base folders in this folder.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "parentKnowledgeBaseFolder" : {
            "$ref" : "#/components/schemas/ParentKnowledgeBaseFolder"
          },
          "parentKnowledgeBaseFolderId" : {
            "format" : "int64",
            "type" : "integer",
            "writeOnly" : true
          },
          "siteId" : {
            "description" : "The ID of the site to which this folder is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.KnowledgeBaseFolder",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object",
        "xml" : {
          "name" : "KnowledgeBaseFolder"
        }
      },
      "PageKnowledgeBaseFolder" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/KnowledgeBaseFolder"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Language" : {
        "properties" : {
          "countryName" : {
            "description" : "The language's contry name.",
            "type" : "string"
          },
          "countryName_i18n" : {
            "additionalProperties" : {
              "description" : "The localized language's country name values.",
              "type" : "string"
            },
            "description" : "The localized language's country name values.",
            "type" : "object"
          },
          "id" : {
            "description" : "The language's ID.",
            "type" : "string"
          },
          "markedAsDefault" : {
            "description" : "A flag that indicates whether the language has benn marked as default language.",
            "type" : "boolean"
          },
          "name" : {
            "description" : "The language's name.",
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "description" : "The localized language's name values.",
              "type" : "string"
            },
            "description" : "The localized language's name values.",
            "type" : "object"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Language",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Language"
        }
      },
      "PageLanguage" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Language"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "MessageBoardAttachment" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "contentUrl" : {
            "description" : "The file's relative URL.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentValue" : {
            "description" : "optional field with the content of the document in Base64, can be embedded with nestedFields",
            "readOnly" : true,
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The file's media format (e.g., application/pdf, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The message board's external reference code.",
            "type" : "string"
          },
          "fileExtension" : {
            "description" : "The file's extension.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The file's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "sizeInBytes" : {
            "description" : "The file's size in bytes.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "title" : {
            "description" : "The file's title.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.MessageBoardAttachment",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "MessageBoardAttachment"
        }
      },
      "PageMessageBoardAttachment" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/MessageBoardAttachment"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "CreatorStatistics" : {
        "description" : "The thread's creator statistics (rank, join date, number of posts, ...)",
        "properties" : {
          "joinDate" : {
            "description" : "Join date of the author.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "lastPostDate" : {
            "description" : "Last post created by the author.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "postsNumber" : {
            "description" : "Number of posts publicated by the author.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "rank" : {
            "description" : "The rank of the author.",
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.CreatorStatistics",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "CreatorStatistics"
        }
      },
      "MessageBoardMessage" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "aggregateRating" : {
            "$ref" : "#/components/schemas/AggregateRating"
          },
          "anonymous" : {
            "description" : "A flag that indicates whether the message's author is anonymous.",
            "type" : "boolean"
          },
          "articleBody" : {
            "description" : "The message's main content.",
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "creatorStatistics" : {
            "$ref" : "#/components/schemas/CreatorStatistics"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the blog post.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The date the message was created.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time the content or metadata of the message was changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The message's media format (e.g., HTML, BBCode, etc.).",
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The message's external reference code.",
            "type" : "string"
          },
          "friendlyUrlPath" : {
            "type" : "string"
          },
          "hasCompanyMx" : {
            "type" : "boolean"
          },
          "headline" : {
            "description" : "The message's main title.",
            "type" : "string"
          },
          "id" : {
            "description" : "The message's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "keywords" : {
            "description" : "A list of keywords describing the message.",
            "items" : {
              "description" : "A list of keywords describing the message.",
              "type" : "string"
            },
            "type" : "array"
          },
          "messageBoardSectionId" : {
            "description" : "The ID of the Message Board Section to which this message is scoped.",
            "format" : "int64",
            "type" : "integer"
          },
          "messageBoardThreadId" : {
            "description" : "The ID of the Message Board Thread to which this message is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "modified" : {
            "type" : "boolean"
          },
          "numberOfMessageBoardAttachments" : {
            "description" : "The number of the message's attachments.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfMessageBoardMessages" : {
            "description" : "The number of the message's child messages.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "parentMessageBoardMessageId" : {
            "description" : "The ID of the message's parent, if it exists.",
            "format" : "int64",
            "type" : "integer"
          },
          "relatedContents" : {
            "description" : "A list of related contents to this message.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "showAsAnswer" : {
            "description" : "A flag that indicates whether the message is answering a question.",
            "type" : "boolean"
          },
          "siteId" : {
            "description" : "The ID of the site to which this message is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "status" : {
            "description" : "The message's status.",
            "readOnly" : true,
            "type" : "string"
          },
          "subscribed" : {
            "description" : "A flag that indicates whether the user making the requests is subscribed to this message.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.MessageBoardMessage",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "MessageBoardMessage"
        }
      },
      "PageMessageBoardMessage" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/MessageBoardMessage"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "MessageBoardSection" : {
        "description" : "Represents a section/folder on a message board, used to organize messages.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the section.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The date the section was created.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time the section was changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The section's description.",
            "type" : "string"
          },
          "id" : {
            "description" : "The section's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfMessageBoardSections" : {
            "description" : "The number of this section's child sections.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfMessageBoardThreads" : {
            "description" : "The number of message board threads in this section.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "parentMessageBoardSectionId" : {
            "description" : "The ID of the section parent's, if it exists.",
            "format" : "int64",
            "type" : "integer"
          },
          "siteId" : {
            "description" : "The ID of the site to which this section is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "subscribed" : {
            "description" : "A flag that indicates whether the user making the requests is subscribed to this section.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "title" : {
            "description" : "The section's main title.",
            "type" : "string"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.MessageBoardSection",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "title" ],
        "type" : "object",
        "xml" : {
          "name" : "MessageBoardSection"
        }
      },
      "PageMessageBoardSection" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/MessageBoardSection"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "MessageBoardThread" : {
        "description" : "Represents a discussion thread in a message board.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "aggregateRating" : {
            "$ref" : "#/components/schemas/AggregateRating"
          },
          "articleBody" : {
            "description" : "The thread's main body content (the message written as the thread's description).",
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "creatorStatistics" : {
            "$ref" : "#/components/schemas/CreatorStatistics"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the thread.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The date the thread was created.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time any field of the thread changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The media format of the thread's content (e.g., HTML, BBCode, etc.).",
            "type" : "string"
          },
          "friendlyUrlPath" : {
            "type" : "string"
          },
          "hasValidAnswer" : {
            "description" : "A flag that indicates whether this thread has a message considered as valid",
            "type" : "boolean"
          },
          "headline" : {
            "description" : "The thread's main title.",
            "type" : "string"
          },
          "id" : {
            "description" : "The thread's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "keywords" : {
            "description" : "A list of keywords describing the thread.",
            "items" : {
              "description" : "A list of keywords describing the thread.",
              "type" : "string"
            },
            "type" : "array"
          },
          "lastPostDate" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "locked" : {
            "description" : "A flag that indicates whether this thread is locked.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "messageBoardRootMessageId" : {
            "description" : "The ID of the thread's message.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "messageBoardSectionId" : {
            "description" : "The ID of the Message Board Section to which this message is scoped.",
            "format" : "int64",
            "type" : "integer"
          },
          "numberOfMessageBoardAttachments" : {
            "description" : "The number of the thread's attachments.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfMessageBoardMessages" : {
            "description" : "The number of the thread's messages.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "relatedContents" : {
            "description" : "A list of related contents to this thread.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "seen" : {
            "description" : "A flag that indicates whether this thread has been seen.",
            "type" : "boolean"
          },
          "showAsQuestion" : {
            "description" : "A flag that indicates whether this thread was posted as a question that can receive approved answers.",
            "type" : "boolean"
          },
          "siteId" : {
            "description" : "The ID of the site to which this thread is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "status" : {
            "description" : "The thread's status.",
            "readOnly" : true,
            "type" : "string"
          },
          "subscribed" : {
            "description" : "A flag that indicates whether the user making the requests is subscribed to this thread.",
            "type" : "boolean"
          },
          "taxonomyCategoryBriefs" : {
            "description" : "The categories associated with this thread.",
            "items" : {
              "$ref" : "#/components/schemas/TaxonomyCategoryBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "taxonomyCategoryIds" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "writeOnly" : true
          },
          "threadType" : {
            "description" : "The thread's type.",
            "type" : "string"
          },
          "viewCount" : {
            "description" : "The number of views of this thread.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.MessageBoardThread",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "headline" ],
        "type" : "object",
        "xml" : {
          "name" : "MessageBoardThread"
        }
      },
      "PageMessageBoardThread" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/MessageBoardThread"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "NavigationMenu" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "dateCreated" : {
            "description" : "The navigation menu's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time the navigation menu changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The navigation menu's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The navigation menu's name.",
            "type" : "string"
          },
          "navigationMenuItems" : {
            "description" : "The list of navigation menu items this navigation menu has.",
            "items" : {
              "$ref" : "#/components/schemas/NavigationMenuItem"
            },
            "type" : "array"
          },
          "navigationType" : {
            "description" : "The navigation menu's type (primary, secondary, social).",
            "enum" : [ "Primary", "Secondary", "Social" ],
            "type" : "string"
          },
          "siteId" : {
            "description" : "The ID of the site to which this navigation menu is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.NavigationMenu",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "NavigationMenu"
        }
      },
      "NavigationMenuItem" : {
        "description" : "The list of navigation menu items this navigation menu has.",
        "properties" : {
          "availableLanguages" : {
            "description" : "The list of languages the navigation menu item has a translation for.",
            "items" : {
              "description" : "The list of languages the navigation menu item has a translation for.",
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "contentURL" : {
            "description" : "The navigation menu item's content API REST URL.",
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "dateCreated" : {
            "description" : "The navigation menu item's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time the navigation menu item changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The navigation menu item's ID.",
            "format" : "int64",
            "type" : "integer"
          },
          "link" : {
            "description" : "The link to a page on the server.",
            "type" : "string"
          },
          "link_i18n" : {
            "additionalProperties" : {
              "description" : "The localized links to a page on the server.",
              "type" : "string"
            },
            "description" : "The localized links to a page on the server.",
            "type" : "object"
          },
          "name" : {
            "description" : "The navigation menu item's name.",
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "description" : "The localized navigation menu item's names.",
              "type" : "string"
            },
            "description" : "The localized navigation menu item's names.",
            "type" : "object"
          },
          "navigationMenuItems" : {
            "description" : "The navigation menu items this navigation menu item has.",
            "items" : {
              "$ref" : "#/components/schemas/NavigationMenuItem"
            },
            "type" : "array"
          },
          "parentNavigationMenuId" : {
            "description" : "The ID of the navigation menu item's parent.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "sitePageURL" : {
            "description" : "The navigation menu item's linked site page URL.",
            "readOnly" : true,
            "type" : "string"
          },
          "type" : {
            "description" : "The navigation menu item's type.",
            "readOnly" : true,
            "type" : "string"
          },
          "url" : {
            "description" : "The navigation menu item's linked URL.",
            "type" : "string"
          },
          "useCustomName" : {
            "type" : "boolean"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.NavigationMenuItem",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "NavigationMenuItem"
        }
      },
      "PageNavigationMenu" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/NavigationMenu"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "ClientExtension" : {
        "description" : "The Client Extension for the theme css of a page",
        "properties" : {
          "externalReferenceCode" : {
            "description" : "The client extension's external reference code.",
            "type" : "string"
          },
          "name" : {
            "description" : "The client extension's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ClientExtension",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ClientExtension"
        }
      },
      "CustomMetaTag" : {
        "description" : "A list of custom metatags this page has.",
        "properties" : {
          "key" : {
            "description" : "The custom metatag's key.",
            "type" : "string"
          },
          "value" : {
            "description" : "The custom metatag's value",
            "type" : "string"
          },
          "value_i18n" : {
            "additionalProperties" : {
              "description" : "The localized custom metatag's values.",
              "type" : "string"
            },
            "description" : "The localized custom metatag's values.",
            "type" : "object"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.CustomMetaTag",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "CustomMetaTag"
        }
      },
      "Experience" : {
        "description" : "Experience of the page that it's being retrieved.",
        "properties" : {
          "key" : {
            "description" : "the experience's key.",
            "type" : "string"
          },
          "name" : {
            "description" : "the experience's name.",
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "description" : "the localized experience's names.",
              "type" : "string"
            },
            "description" : "the localized experience's names.",
            "type" : "object"
          },
          "segments" : {
            "description" : "A list of segments the experience is used for.",
            "items" : {
              "$ref" : "#/components/schemas/Segment"
            },
            "type" : "array"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Experience",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Experience"
        }
      },
      "MasterPage" : {
        "description" : "The page's master page.",
        "properties" : {
          "key" : {
            "description" : "The master page's key.",
            "type" : "string"
          },
          "name" : {
            "description" : "The master page's name.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.MasterPage",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "MasterPage"
        }
      },
      "OpenGraphSettings" : {
        "description" : "The page's Open Graph settings.",
        "properties" : {
          "description" : {
            "description" : "The Open Graph's description.",
            "type" : "string"
          },
          "description_i18n" : {
            "additionalProperties" : {
              "description" : "The localized Open Graph's descriptions.",
              "type" : "string"
            },
            "description" : "The localized Open Graph's descriptions.",
            "type" : "object"
          },
          "image" : {
            "$ref" : "#/components/schemas/ContentDocument"
          },
          "imageAlt" : {
            "description" : "The Open Graph's image alt.",
            "type" : "string"
          },
          "imageAlt_i18n" : {
            "additionalProperties" : {
              "description" : "The localized Open Graph's image alts.",
              "type" : "string"
            },
            "description" : "The localized Open Graph's image alts.",
            "type" : "object"
          },
          "title" : {
            "description" : "The Open Graph's title.",
            "type" : "string"
          },
          "title_i18n" : {
            "additionalProperties" : {
              "description" : "The localized Open Graph's titles.",
              "type" : "string"
            },
            "description" : "The localized Open Graph's titles.",
            "type" : "object"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.OpenGraphSettings",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "OpenGraphSettings"
        }
      },
      "PageDefinition" : {
        "description" : "Optional field with the structure of all the elements of the page. Can be embedded with nestedFields when retrieving the collection of site pages. When retrieving a single site page, it will automatically be included.",
        "properties" : {
          "pageElement" : {
            "$ref" : "#/components/schemas/PageElement"
          },
          "settings" : {
            "$ref" : "#/components/schemas/Settings"
          },
          "version" : {
            "description" : "The version of the JSON generated by page definition.",
            "format" : "double",
            "type" : "number"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.PageDefinition",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "PageDefinition"
        }
      },
      "PageElement" : {
        "description" : "The page's page element.",
        "properties" : {
          "definition" : {
            "description" : "The page element's definition.",
            "type" : "object"
          },
          "pageElements" : {
            "description" : "A list of the page elements this page element has.",
            "items" : {
              "$ref" : "#/components/schemas/PageElement"
            },
            "type" : "array"
          },
          "type" : {
            "description" : "The page element's type (collection, collection item, column, drop zone, form, fragment, fragment drop zone, root, row, section or widget).",
            "enum" : [ "Collection", "CollectionItem", "Column", "DropZone", "Form", "Fragment", "FragmentDropZone", "Root", "Row", "Section", "Widget" ],
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.PageElement",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "PageElement"
        }
      },
      "PageSettings" : {
        "description" : "Settings of the page, such as SEO or OpenGraph.",
        "properties" : {
          "customMetaTags" : {
            "description" : "A list of custom metatags this page has.",
            "items" : {
              "$ref" : "#/components/schemas/CustomMetaTag"
            },
            "type" : "array"
          },
          "hiddenFromNavigation" : {
            "description" : "A flag that indicates whether the page is hidden from navigation.",
            "type" : "boolean"
          },
          "openGraphSettings" : {
            "$ref" : "#/components/schemas/OpenGraphSettings"
          },
          "seoSettings" : {
            "$ref" : "#/components/schemas/SEOSettings"
          },
          "sitePageNavigationMenuSettings" : {
            "$ref" : "#/components/schemas/SitePageNavigationMenuSettings"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.PageSettings",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "PageSettings"
        }
      },
      "ParentSitePage" : {
        "description" : "The parent page or null if it is a top level page.",
        "properties" : {
          "friendlyUrlPath" : {
            "description" : "The relative URL of the parent page.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.ParentSitePage",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "ParentSitePage"
        }
      },
      "RenderedPage" : {
        "description" : "Metadata of the page such as it's master page and template.",
        "properties" : {
          "masterPageId" : {
            "description" : "The ID of the master page used to render the content.",
            "readOnly" : true,
            "type" : "string"
          },
          "masterPageName" : {
            "description" : "The name of the master page used to render the content.",
            "type" : "string"
          },
          "pageTemplateId" : {
            "description" : "The ID of the template used to render the content.",
            "readOnly" : true,
            "type" : "string"
          },
          "pageTemplateName" : {
            "description" : "The name of the template used to render the content.",
            "type" : "string"
          },
          "renderedPageURL" : {
            "description" : "An absolute URL to the rendered page.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.RenderedPage",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "RenderedPage"
        }
      },
      "SEOSettings" : {
        "description" : "The page's SEO settings.",
        "properties" : {
          "customCanonicalURL" : {
            "description" : "The canonical URL of the page, if it exists.",
            "type" : "string"
          },
          "customCanonicalURL_i18n" : {
            "additionalProperties" : {
              "description" : "The localized canonical URL of the page, if it exists.",
              "type" : "string"
            },
            "description" : "The localized canonical URL of the page, if it exists.",
            "type" : "object"
          },
          "description" : {
            "description" : "The page's description to be used as summary for search engines.",
            "type" : "string"
          },
          "description_i18n" : {
            "additionalProperties" : {
              "description" : "The localized descriptions of the page to be used as summary for search engines.",
              "type" : "string"
            },
            "description" : "The localized descriptions of the page to be used as summary for search engines.",
            "type" : "object"
          },
          "htmlTitle" : {
            "description" : "The page's main title to be used by search engines.",
            "type" : "string"
          },
          "htmlTitle_i18n" : {
            "additionalProperties" : {
              "description" : "The localized main titles of the page to be used by search engines.",
              "type" : "string"
            },
            "description" : "The localized main titles of the page to be used by search engines.",
            "type" : "object"
          },
          "robots" : {
            "description" : "A tag telling search engines if and how they should crawl the page.",
            "type" : "string"
          },
          "robots_i18n" : {
            "additionalProperties" : {
              "description" : "A localized tag telling search engines if and how they should crawl the page.",
              "type" : "string"
            },
            "description" : "A localized tag telling search engines if and how they should crawl the page.",
            "type" : "object"
          },
          "seoKeywords" : {
            "description" : "A list of target keywords of the page to be used by search engines.",
            "type" : "string"
          },
          "seoKeywords_i18n" : {
            "additionalProperties" : {
              "description" : "A list of localized target keywords of the page to be used by search engines.",
              "type" : "string"
            },
            "description" : "A list of localized target keywords of the page to be used by search engines.",
            "type" : "object"
          },
          "siteMapSettings" : {
            "$ref" : "#/components/schemas/SiteMapSettings"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.SEOSettings",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "SEOSettings"
        }
      },
      "Segment" : {
        "description" : "Represents a set of users that meet certain criteria. Segments may be used to create customized experiences for users.",
        "enum" : [ "criteria", "name" ],
        "properties" : {
          "active" : {
            "description" : "A flag that indicates whether the segment is active.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "criteria" : {
            "description" : "The segment's criteria.",
            "readOnly" : true,
            "type" : "string"
          },
          "criteriaValue" : {
            "additionalProperties" : {
              "description" : "The segment's criteria in JSON.",
              "type" : "object"
            },
            "description" : "The segment's criteria in JSON.",
            "readOnly" : true,
            "type" : "object"
          },
          "dateCreated" : {
            "description" : "The segment's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The segment's most recent modification date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The segment's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The segment's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "siteId" : {
            "description" : "The ID of the segment's site.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "source" : {
            "description" : "The segment's source.",
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Segment",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "criteria", "name" ],
        "type" : "object",
        "xml" : {
          "name" : "Segment"
        }
      },
      "Settings" : {
        "description" : "The page's settings.",
        "properties" : {
          "colorSchemeName" : {
            "description" : "The page's color scheme name.",
            "type" : "string"
          },
          "css" : {
            "description" : "The page's CSS.",
            "type" : "string"
          },
          "favIcon" : {
            "description" : "The FavIcon of the page",
            "type" : "object"
          },
          "globalCSSClientExtensions" : {
            "description" : "The client extensions for global css associated to the page.",
            "items" : {
              "$ref" : "#/components/schemas/ClientExtension"
            },
            "type" : "array"
          },
          "globalJSClientExtensions" : {
            "description" : "The client extensions for global js associated to the page.",
            "items" : {
              "$ref" : "#/components/schemas/ClientExtension"
            },
            "type" : "array"
          },
          "javascript" : {
            "description" : "The page's JavaScript.",
            "type" : "string"
          },
          "masterPage" : {
            "$ref" : "#/components/schemas/MasterPage"
          },
          "styleBook" : {
            "$ref" : "#/components/schemas/StyleBook"
          },
          "themeCSSClientExtension" : {
            "$ref" : "#/components/schemas/ClientExtension"
          },
          "themeName" : {
            "description" : "The page's theme name.",
            "type" : "string"
          },
          "themeSettings" : {
            "description" : "The page's theme settings.",
            "type" : "object"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.Settings",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Settings"
        }
      },
      "SiteMapSettings" : {
        "description" : "Represents settings related with the site map.",
        "properties" : {
          "changeFrequency" : {
            "description" : "Indicates how often a page is updated.",
            "enum" : [ "Always", "Hourly", "Daily", "Weekly", "Monthly", "Yearly", "Never" ],
            "type" : "string"
          },
          "include" : {
            "description" : "Whether search engines should crawl and index the page.",
            "type" : "boolean"
          },
          "pagePriority" : {
            "description" : "How the page should be prioritized relative to other pages.",
            "exclusiveMaximum" : false,
            "exclusiveMinimum" : false,
            "format" : "double",
            "maximum" : 1,
            "minimum" : 0,
            "type" : "number"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.SiteMapSettings",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "SiteMapSettings"
        }
      },
      "SitePage" : {
        "description" : "Represents a site page. This is modeled internally as a `Layout`.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "aggregateRating" : {
            "$ref" : "#/components/schemas/AggregateRating"
          },
          "availableLanguages" : {
            "description" : "The list of languages the page has a translation for.",
            "items" : {
              "description" : "The list of languages the page has a translation for.",
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "Custom fields associated with the page.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The page's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time any field of the page was changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "datePublished" : {
            "description" : "The page's most recent publication date.",
            "format" : "date-time",
            "type" : "string"
          },
          "experience" : {
            "$ref" : "#/components/schemas/Experience"
          },
          "friendlyUrlPath" : {
            "description" : "A relative URL to the page's rendered content.",
            "type" : "string"
          },
          "friendlyUrlPath_i18n" : {
            "additionalProperties" : {
              "description" : "The localized relative URLs to the page's rendered content.",
              "type" : "string"
            },
            "description" : "The localized relative URLs to the page's rendered content.",
            "type" : "object"
          },
          "id" : {
            "description" : "The page ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "keywords" : {
            "description" : "A list of keywords describing the page.",
            "items" : {
              "description" : "A list of keywords describing the page.",
              "type" : "string"
            },
            "type" : "array"
          },
          "pageDefinition" : {
            "$ref" : "#/components/schemas/PageDefinition"
          },
          "pagePermissions" : {
            "description" : "The page's permissions.",
            "items" : {
              "$ref" : "#/components/schemas/PagePermission"
            },
            "type" : "array"
          },
          "pageSettings" : {
            "$ref" : "#/components/schemas/PageSettings"
          },
          "pageType" : {
            "description" : "The type of the page.",
            "type" : "string"
          },
          "parentSitePage" : {
            "$ref" : "#/components/schemas/ParentSitePage"
          },
          "renderedPage" : {
            "$ref" : "#/components/schemas/RenderedPage"
          },
          "siteId" : {
            "description" : "The ID of the site to which this page is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "taxonomyCategoryBriefs" : {
            "description" : "The categories associated with this page.",
            "items" : {
              "$ref" : "#/components/schemas/TaxonomyCategoryBrief"
            },
            "type" : "array"
          },
          "taxonomyCategoryIds" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "writeOnly" : true
          },
          "title" : {
            "description" : "The page's title.",
            "type" : "string"
          },
          "title_i18n" : {
            "additionalProperties" : {
              "description" : "The localized page's titles.",
              "type" : "string"
            },
            "description" : "The localized page's titles.",
            "type" : "object"
          },
          "uuid" : {
            "description" : "A valid external identifier to reference this page.",
            "readOnly" : true,
            "type" : "string"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.SitePage",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "title" ],
        "type" : "object",
        "xml" : {
          "name" : "SitePage"
        }
      },
      "SitePageNavigationMenuSettings" : {
        "description" : "The page's site navigation menu settings.",
        "properties" : {
          "queryString" : {
            "description" : "The default parameter for a page.",
            "type" : "string"
          },
          "target" : {
            "description" : "The page's description to be used as summary for search engines.",
            "type" : "string"
          },
          "targetType" : {
            "description" : "The target's type (specific frame or new tab).",
            "enum" : [ "SpecificFrame", "NewTab" ],
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.SitePageNavigationMenuSettings",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "SitePageNavigationMenuSettings"
        }
      },
      "StyleBook" : {
        "description" : "The StyleBook that is applied to the page.",
        "properties" : {
          "key" : {
            "description" : "The stylebook's key.",
            "type" : "string"
          },
          "name" : {
            "description" : "The stylebook's name.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.StyleBook",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "StyleBook"
        }
      },
      "PageSitePage" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/SitePage"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "StructuredContentFolder" : {
        "description" : "Represents a folder that can be used to organize structured content.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "assetLibraryKey" : {
            "description" : "The key of the asset library to which the folder is scoped.",
            "readOnly" : true,
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the folder.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The date the folder was created.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time any of the folder's fields changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The folder's description.",
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The structured content folder's external reference code.",
            "type" : "string"
          },
          "id" : {
            "description" : "The folder's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The folder's name.",
            "type" : "string"
          },
          "numberOfStructuredContentFolders" : {
            "description" : "The number of structured content folders inside this folder.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfStructuredContents" : {
            "description" : "The number of structured content objects inside this folder.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "parentStructuredContentFolderId" : {
            "description" : "The ID of the folder's parent, if it exists.",
            "format" : "int64",
            "type" : "integer"
          },
          "siteId" : {
            "description" : "The ID of the site to which this folder is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "subscribed" : {
            "description" : "A flag that indicates whether the user making the requests is subscribed to this folder.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.StructuredContentFolder",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object",
        "xml" : {
          "name" : "StructuredContentFolder"
        }
      },
      "PageStructuredContentFolder" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/StructuredContentFolder"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "PageStructuredContent" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/StructuredContent"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "WikiNode" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "dateCreated" : {
            "description" : "The date the wiki node was created.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time any of the wiki node's fields changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The wiki node's description.",
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The wiki node's external reference code.",
            "type" : "string"
          },
          "id" : {
            "description" : "The wiki node's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The wiki node's name.",
            "type" : "string"
          },
          "numberOfWikiPages" : {
            "description" : "The number of child wiki page on this wiki node.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "siteId" : {
            "description" : "The ID of the site to which this wiki node is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "subscribed" : {
            "description" : "A flag that indicates whether the user making the requests is subscribed to this wiki node.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.WikiNode",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "WikiNode"
        }
      },
      "PageWikiNode" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/WikiNode"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "PageWikiPageAttachment" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/WikiPageAttachment"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "WikiPageAttachment" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "contentUrl" : {
            "description" : "The file's relative URL.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentValue" : {
            "description" : "Optional field with the content of the document in Base64, can be embedded with nestedFields.",
            "readOnly" : true,
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The file's media format (e.g., application/pdf, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "externalReferenceCode" : {
            "type" : "string"
          },
          "fileExtension" : {
            "description" : "The file's extension.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The file's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "sizeInBytes" : {
            "description" : "The file's size in bytes.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "title" : {
            "description" : "The file's title.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.WikiPageAttachment",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "WikiPageAttachment"
        }
      },
      "WikiPage" : {
        "description" : "Represents a wiki page.",
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "aggregateRating" : {
            "$ref" : "#/components/schemas/AggregateRating"
          },
          "content" : {
            "description" : "The wiki page's content.",
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "customFields" : {
            "description" : "A list of the custom fields associated with the wiki page.",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The date the wiki page was created.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time any of the wiki page's fields changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The wiki page's description.",
            "type" : "string"
          },
          "encodingFormat" : {
            "description" : "The wiki page's media format (e.g., HTML, BBCode, etc.).",
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The wiki page's external reference code.",
            "type" : "string"
          },
          "headline" : {
            "description" : "The wiki page's main title.",
            "type" : "string"
          },
          "id" : {
            "description" : "The wiki page's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "keywords" : {
            "description" : "A list of keywords describing the blog post.",
            "items" : {
              "description" : "A list of keywords describing the blog post.",
              "type" : "string"
            },
            "type" : "array"
          },
          "numberOfAttachments" : {
            "description" : "The wiki page's number attachments.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfWikiPages" : {
            "description" : "The number of child wiki page on this wiki page.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "parentWikiPageId" : {
            "description" : "The ID of the wiki page's parent, if it exists.",
            "format" : "int64",
            "type" : "integer"
          },
          "relatedContents" : {
            "description" : "A list of related contents to this wiki page.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedContent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "siteId" : {
            "description" : "The ID of the site to which this wiki page is scoped.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "subscribed" : {
            "description" : "A flag that indicates whether the user making the requests is subscribed to this wiki page.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "taxonomyCategoryBriefs" : {
            "description" : "The categories associated with this wiki page.",
            "items" : {
              "$ref" : "#/components/schemas/TaxonomyCategoryBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "taxonomyCategoryIds" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "writeOnly" : true
          },
          "viewableBy" : {
            "enum" : [ "Anyone", "Members", "Owner" ],
            "type" : "string",
            "writeOnly" : true
          },
          "wikiNodeId" : {
            "description" : "The ID of the wiki node to which the wiki page belongs.",
            "format" : "int64",
            "type" : "integer"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.delivery.dto.v1_0.WikiPage",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "encodingFormat", "headline" ],
        "type" : "object",
        "xml" : {
          "name" : "WikiPage"
        }
      },
      "PageWikiPage" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/WikiPage"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      }
    }
  },
  "info" : {
    "description" : "A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.delivery.client', and version '4.0.60'.",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title" : "Headless Delivery",
    "version" : "v1.0"
  },
  "openapi" : "3.0.1",
  "paths" : {
    "/v1.0/sites/{siteId}/blog-posting-images" : {
      "get" : {
        "description" : "Retrieves the site's blog post images. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getSiteBlogPostingImagesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageBlogPostingImage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageBlogPostingImage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPostingImage" ]
      },
      "post" : {
        "description" : "Creates a blog post image. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`blogPostingImage`) with the metadata.",
        "operationId" : "postSiteBlogPostingImage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPostingImage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPostingImage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPostingImage" ]
      }
    },
    "/v1.0/blog-posting-images/{blogPostingImageId}" : {
      "delete" : {
        "description" : "Deletes the blog post's image.",
        "operationId" : "deleteBlogPostingImage",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingImageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPostingImage" ]
      },
      "get" : {
        "description" : "Retrieves the blog post's image. The binary image is returned as a relative URL to the image itself.",
        "operationId" : "getBlogPostingImage",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingImageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPostingImage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPostingImage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPostingImage" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-posting-images/batch" : {
      "post" : {
        "operationId" : "postSiteBlogPostingImageBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPostingImage" ]
      }
    },
    "/v1.0/blog-posting-images/batch" : {
      "delete" : {
        "operationId" : "deleteBlogPostingImageBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPostingImage" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-posting-images/export-batch" : {
      "post" : {
        "operationId" : "postSiteBlogPostingImagesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPostingImage" ]
      }
    },
    "/v1.0/blog-postings/{blogPostingId}/rendered-content-by-display-page/{displayPageKey}" : {
      "get" : {
        "description" : "Retrieves the blog post's rendered display page",
        "operationId" : "getBlogPostingRenderedContentByDisplayPageDisplayPageKey",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "displayPageKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the blog post by external reference code.",
        "operationId" : "deleteSiteBlogPostingByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "get" : {
        "description" : "Retrieves the site's blog post by external reference code.",
        "operationId" : "getSiteBlogPostingByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "put" : {
        "description" : "Updates the site's blog post with the given external reference code, or creates it if it not exists.",
        "operationId" : "putSiteBlogPostingByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPosting"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPosting"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-postings/subscribe" : {
      "put" : {
        "operationId" : "putSiteBlogPostingSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-postings/unsubscribe" : {
      "put" : {
        "operationId" : "putSiteBlogPostingUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/blog-postings/{blogPostingId}" : {
      "delete" : {
        "description" : "Deletes the blog post and returns a 204 if the operation succeeds.",
        "operationId" : "deleteBlogPosting",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "get" : {
        "description" : "Retrieves the blog post.",
        "operationId" : "getBlogPosting",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "patch" : {
        "description" : "Updates the blog post using only the fields received in the request body. Any other fields are left untouched. Returns the updated blog post.",
        "operationId" : "patchBlogPosting",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPosting"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPosting"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "put" : {
        "description" : "Replaces the blog post with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putBlogPosting",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPosting"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPosting"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/blog-postings/{blogPostingId}/my-rating" : {
      "delete" : {
        "description" : "Deletes the blog post rating of the user who authenticated the request.",
        "operationId" : "deleteBlogPostingMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "get" : {
        "description" : "Retrieves the blog post rating of the user who authenticated the request.",
        "operationId" : "getBlogPostingMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "post" : {
        "description" : "Creates a new blog post rating by the user who authenticated the request.",
        "operationId" : "postBlogPostingMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "put" : {
        "description" : "Replaces an existing blog post rating by the user who authenticated the request.",
        "operationId" : "putBlogPostingMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-postings" : {
      "get" : {
        "description" : "Retrieves the site's blog postings. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getSiteBlogPostingsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageBlogPosting"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageBlogPosting"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "post" : {
        "description" : "Creates a new blog post.",
        "operationId" : "postSiteBlogPosting",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPosting"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPosting"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPosting"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/blog-postings/{blogPostingId}/permissions" : {
      "get" : {
        "operationId" : "getBlogPostingPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "put" : {
        "operationId" : "putBlogPostingPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-postings/export-batch" : {
      "post" : {
        "operationId" : "postSiteBlogPostingsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-postings/permissions" : {
      "get" : {
        "operationId" : "getSiteBlogPostingPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "put" : {
        "operationId" : "putSiteBlogPostingPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-postings/batch" : {
      "post" : {
        "operationId" : "postSiteBlogPostingBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/blog-postings/batch" : {
      "delete" : {
        "operationId" : "deleteBlogPostingBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      },
      "put" : {
        "operationId" : "putBlogPostingBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BlogPosting" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}/comments" : {
      "get" : {
        "description" : "Retrieves the structured content's comments. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getStructuredContentCommentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageComment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageComment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "post" : {
        "description" : "Creates a new comment on the structured content.",
        "operationId" : "postStructuredContentComment",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/comments/{commentId}" : {
      "delete" : {
        "description" : "Deletes the comment and returns a 204 if the operation succeeded.",
        "operationId" : "deleteComment",
        "parameters" : [ {
          "in" : "path",
          "name" : "commentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "get" : {
        "description" : "Retrieves the comment.",
        "operationId" : "getComment",
        "parameters" : [ {
          "in" : "path",
          "name" : "commentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "put" : {
        "description" : "Replaces the comment with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putComment",
        "parameters" : [ {
          "in" : "path",
          "name" : "commentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/blog-postings/{blogPostingId}/comments" : {
      "get" : {
        "description" : "Retrieves the blog post's comments in a list. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getBlogPostingCommentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageComment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageComment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "post" : {
        "description" : "Creates a new comment on the blog post.",
        "operationId" : "postBlogPostingComment",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/comments/{parentCommentId}/comments" : {
      "get" : {
        "description" : "Retrieves the parent comment's child comments. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getCommentCommentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentCommentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageComment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageComment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "post" : {
        "description" : "Creates a new child comment of the existing comment.",
        "operationId" : "postCommentComment",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentCommentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/documents/{documentId}/comments" : {
      "get" : {
        "description" : "Retrieves the document's comments. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getDocumentCommentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageComment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageComment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "post" : {
        "description" : "Creates a new comment on the document.",
        "operationId" : "postDocumentComment",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{structuredContentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the structured content's comment by structured content's and comment's external reference codes.",
        "operationId" : "deleteSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "structuredContentExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "get" : {
        "description" : "Retrieves the structured content's comment by structured content's and comment's external reference codes.",
        "operationId" : "getSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "structuredContentExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "put" : {
        "description" : "Updates the structured content's comment given the structured content's and comment's external reference codes, or creates it if it not exists.",
        "operationId" : "putSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "structuredContentExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{blogPostingExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the blog posting's comment by blog posting's and comment's external reference codes.",
        "operationId" : "deleteSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "blogPostingExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "get" : {
        "description" : "Retrieves the blog posting's comment by blog posting's and comment's external reference codes.",
        "operationId" : "getSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "blogPostingExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "put" : {
        "description" : "Updates the blog posting's comment given the blog posting's and comment's external reference codes, or creates it if it not exists.",
        "operationId" : "putSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "blogPostingExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/sites/{siteId}/comments/by-external-reference-code/{parentCommentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the parent comment's comment by its parent comment's and comment's external reference codes.",
        "operationId" : "deleteSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "parentCommentExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "get" : {
        "description" : "Retrieves the parent comment's comment by its parent comment's and comment's external reference codes.",
        "operationId" : "getSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "parentCommentExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "put" : {
        "description" : "Updates the parent comment's comment given the parent comment's and comment's external reference codes, or creates it if it not exists.",
        "operationId" : "putSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "parentCommentExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/sites/{siteId}/documents/by-external-reference-code/{documentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the document's comment by document's and comment's external reference codes.",
        "operationId" : "deleteSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "documentExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "get" : {
        "description" : "Retrieves the document's comment by document's and comment's external reference codes.",
        "operationId" : "getSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "documentExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "put" : {
        "description" : "Updates the document's comment given the document's and comment's external reference codes, or creates it if it not exists.",
        "operationId" : "putSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "documentExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}/comments/export-batch" : {
      "post" : {
        "operationId" : "postStructuredContentCommentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/blog-postings/{blogPostingId}/comments/batch" : {
      "post" : {
        "operationId" : "postBlogPostingCommentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}/comments/batch" : {
      "post" : {
        "operationId" : "postStructuredContentCommentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/blog-postings/{blogPostingId}/comments/export-batch" : {
      "post" : {
        "operationId" : "postBlogPostingCommentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "blogPostingId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/documents/{documentId}/comments/export-batch" : {
      "post" : {
        "operationId" : "postDocumentCommentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/comments/batch" : {
      "delete" : {
        "operationId" : "deleteCommentBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      },
      "put" : {
        "operationId" : "putCommentBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/documents/{documentId}/comments/batch" : {
      "post" : {
        "operationId" : "postDocumentCommentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Comment" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/content-elements" : {
      "get" : {
        "operationId" : "getAssetLibraryContentElementsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentElement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentElement"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentElement" ]
      }
    },
    "/v1.0/sites/{siteId}/content-elements" : {
      "get" : {
        "operationId" : "getSiteContentElementsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentElement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentElement"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentElement" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/content-elements/export-batch" : {
      "post" : {
        "operationId" : "postAssetLibraryContentElementsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentElement" ]
      }
    },
    "/v1.0/sites/{siteId}/content-elements/export-batch" : {
      "post" : {
        "operationId" : "postSiteContentElementsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentElement" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/content-sets/by-key/{key}/content-set-elements" : {
      "get" : {
        "operationId" : "getAssetLibraryContentSetByKeyContentSetElementsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentSetElement" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/content-sets/by-uuid/{uuid}/content-set-elements" : {
      "get" : {
        "operationId" : "getAssetLibraryContentSetByUuidContentSetElementsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentSetElement" ]
      }
    },
    "/v1.0/sites/{siteId}/content-sets/by-key/{key}/content-set-elements" : {
      "get" : {
        "description" : "Retrieves the content set elements by key. Results can be paginated.",
        "operationId" : "getSiteContentSetByKeyContentSetElementsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentSetElement" ]
      }
    },
    "/v1.0/sites/{siteId}/content-sets/by-uuid/{uuid}/content-set-elements" : {
      "get" : {
        "description" : "Retrieves the content set elements by UUID. Results can be paginated.",
        "operationId" : "getSiteContentSetByUuidContentSetElementsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentSetElement" ]
      }
    },
    "/v1.0/content-sets/{contentSetId}/content-set-elements" : {
      "get" : {
        "description" : "Retrieves the content set's elements (e.g., structured content, blogs, etc.). Results can be paginated. The set of available headers are: Accept-Language (string), Host (string), User-Agent (string), X-Browser (string), X-Cookies (collection string), X-Device-Brand (string), X-Device-Model (string), X-Device-Screen-Resolution-Height (double), X-Device-Screen-Resolution-Width (double), X-Last-Sign-In-Date-Time (date time) and X-Signed-In (boolean). Local date will be always present in the request.",
        "operationId" : "getContentSetContentSetElementsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "contentSetId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentSetElement"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentSetElement" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/content-structures" : {
      "get" : {
        "operationId" : "getAssetLibraryContentStructuresPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentStructure"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentStructure"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      }
    },
    "/v1.0/sites/{siteId}/content-structures" : {
      "get" : {
        "description" : "Retrieves the site's content structures. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getSiteContentStructuresPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentStructure"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentStructure"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      }
    },
    "/v1.0/content-structures/{contentStructureId}" : {
      "get" : {
        "description" : "Retrieves the content structure.",
        "operationId" : "getContentStructure",
        "parameters" : [ {
          "in" : "path",
          "name" : "contentStructureId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentStructure"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentStructure"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/content-structures/export-batch" : {
      "post" : {
        "operationId" : "postAssetLibraryContentStructuresPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/content-structures/permissions" : {
      "get" : {
        "operationId" : "getAssetLibraryContentStructurePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      },
      "put" : {
        "operationId" : "putAssetLibraryContentStructurePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      }
    },
    "/v1.0/content-structures/{contentStructureId}/permissions" : {
      "get" : {
        "operationId" : "getContentStructurePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "contentStructureId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      },
      "put" : {
        "operationId" : "putContentStructurePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "contentStructureId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      }
    },
    "/v1.0/sites/{siteId}/content-structures/export-batch" : {
      "post" : {
        "operationId" : "postSiteContentStructuresPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      }
    },
    "/v1.0/sites/{siteId}/content-structures/permissions" : {
      "get" : {
        "operationId" : "getSiteContentStructurePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      },
      "put" : {
        "operationId" : "putSiteContentStructurePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentStructure" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/content-templates" : {
      "get" : {
        "operationId" : "getAssetLibraryContentTemplatesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentTemplate"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentTemplate"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentTemplate" ]
      }
    },
    "/v1.0/sites/{siteId}/content-templates" : {
      "get" : {
        "operationId" : "getSiteContentTemplatesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentTemplate"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContentTemplate"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentTemplate" ]
      }
    },
    "/v1.0/sites/{siteId}/content-templates/{contentTemplateId}" : {
      "get" : {
        "operationId" : "getSiteContentTemplate",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "contentTemplateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentTemplate"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentTemplate"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentTemplate" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/content-templates/export-batch" : {
      "post" : {
        "operationId" : "postAssetLibraryContentTemplatesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentTemplate" ]
      }
    },
    "/v1.0/sites/{siteId}/content-templates/export-batch" : {
      "post" : {
        "operationId" : "postSiteContentTemplatesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ContentTemplate" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/document-folders/rated-by-me" : {
      "get" : {
        "description" : "Retrieves the document folders rated by the user.",
        "operationId" : "getAssetLibraryDocumentFoldersRatedByMePage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/documents-folder/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the site's document folder by external reference code returns a 204 if the operation succeeds.",
        "operationId" : "deleteSiteDocumentsFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "get" : {
        "description" : "Retrieves the site's document folder by external reference code.",
        "operationId" : "getSiteDocumentsFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "put" : {
        "description" : "Replaces the document folder by external reference code with the information sent in the request body, or replaces it if it not exists.",
        "operationId" : "putSiteDocumentsFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/document-folders" : {
      "get" : {
        "operationId" : "getAssetLibraryDocumentFoldersPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "post" : {
        "operationId" : "postAssetLibraryDocumentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/document-folders/{documentFolderId}/my-rating" : {
      "delete" : {
        "description" : "Deletes the document folder's rating and returns a 204 if the operation succeeded.",
        "operationId" : "deleteDocumentFolderMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "get" : {
        "description" : "Retrieves the document folder's rating.",
        "operationId" : "getDocumentFolderMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "post" : {
        "description" : "Creates a new rating for the document folder, by the user who authenticated the request.",
        "operationId" : "postDocumentFolderMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "put" : {
        "description" : "Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putDocumentFolderMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/document-folders/{documentFolderId}/unsubscribe" : {
      "put" : {
        "operationId" : "putDocumentFolderUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/document-folders/{parentDocumentFolderId}/document-folders" : {
      "get" : {
        "description" : "Retrieves the folder's subfolders. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getDocumentFolderDocumentFoldersPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentDocumentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "post" : {
        "description" : "Creates a new folder in a folder identified by `parentDocumentFolderId`.",
        "operationId" : "postDocumentFolderDocumentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentDocumentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/document-folders/rated-by-me" : {
      "get" : {
        "description" : "Retrieves the document folders rated by the user.",
        "operationId" : "getSiteDocumentFoldersRatedByMePage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/document-folders/{documentFolderId}" : {
      "delete" : {
        "description" : "Deletes the document folder and returns a 204 if the operation succeeds.",
        "operationId" : "deleteDocumentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "get" : {
        "description" : "Retrieves the document folder.",
        "operationId" : "getDocumentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "patch" : {
        "description" : "Updates only the fields received in the request body. Any other fields are left untouched.",
        "operationId" : "patchDocumentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "put" : {
        "description" : "Replaces the document folder with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putDocumentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/document-folders/{documentFolderId}/subscribe" : {
      "put" : {
        "operationId" : "putDocumentFolderSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/document-folders" : {
      "get" : {
        "description" : "Retrieves the site's document folders. Results can be paginated, filtered, searched, flattened, and sorted.",
        "operationId" : "getSiteDocumentFoldersPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "post" : {
        "description" : "Creates a new document folder.",
        "operationId" : "postSiteDocumentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/document-folders/export-batch" : {
      "post" : {
        "operationId" : "postAssetLibraryDocumentFoldersPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/document-folders/permissions" : {
      "get" : {
        "operationId" : "getAssetLibraryDocumentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "put" : {
        "operationId" : "putAssetLibraryDocumentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/document-folders/batch" : {
      "post" : {
        "operationId" : "postAssetLibraryDocumentFolderBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/document-folders/{documentFolderId}/permissions" : {
      "get" : {
        "operationId" : "getDocumentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "put" : {
        "operationId" : "putDocumentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/document-folders/export-batch" : {
      "post" : {
        "operationId" : "postSiteDocumentFoldersPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/document-folders/batch" : {
      "post" : {
        "operationId" : "postSiteDocumentFolderBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/document-folders/permissions" : {
      "get" : {
        "operationId" : "getSiteDocumentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "put" : {
        "operationId" : "putSiteDocumentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/document-folders/batch" : {
      "delete" : {
        "operationId" : "deleteDocumentFolderBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      },
      "put" : {
        "operationId" : "putDocumentFolderBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "DocumentFolder" ]
      }
    },
    "/v1.0/documents/{documentId}/rendered-content-by-display-page/{displayPageKey}" : {
      "get" : {
        "description" : "Retrieves the document's rendered display page",
        "operationId" : "getDocumentRenderedContentByDisplayPageDisplayPageKey",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "displayPageKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/documents/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the asset library's document by external reference code.",
        "operationId" : "deleteAssetLibraryDocumentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "get" : {
        "description" : "Retrieves the asset library's document by external reference code.",
        "operationId" : "getAssetLibraryDocumentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "put" : {
        "description" : "Replaces the document by external reference code with the information sent in the request body, or replaces it if it not exists. Any missing fields are deleted, unless they are required. The request body must be `multipart/form-data` with two parts, the file'sbytes (`file`), and an optional JSON string (`document`) with the metadata.",
        "operationId" : "putAssetLibraryDocumentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/documents/rated-by-me" : {
      "get" : {
        "description" : "Retrieves the documents rated by the user.",
        "operationId" : "getAssetLibraryDocumentsRatedByMePage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/documents" : {
      "get" : {
        "operationId" : "getAssetLibraryDocumentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "post" : {
        "operationId" : "postAssetLibraryDocument",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/document-folders/{documentFolderId}/documents" : {
      "get" : {
        "description" : "Retrieves the folder's documents. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getDocumentFolderDocumentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "post" : {
        "description" : "Creates a new document inside the folder identified by `documentFolderId`. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`document`) with the metadata.",
        "operationId" : "postDocumentFolderDocument",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/sites/{siteId}/documents/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the site's document by external reference code returns a 204 if the operation succeeds.",
        "operationId" : "deleteSiteDocumentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "get" : {
        "description" : "Retrieves the site's document by external reference code.",
        "operationId" : "getSiteDocumentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "put" : {
        "description" : "Replaces the document by external reference code with the information sent in the request body, or replaces it if it not exists. Any missing fields are deleted, unless they are required. The request body must be `multipart/form-data` with two parts, the file'sbytes (`file`), and an optional JSON string (`document`) with the metadata.",
        "operationId" : "putSiteDocumentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/sites/{siteId}/documents/rated-by-me" : {
      "get" : {
        "description" : "Retrieves the documents rated by the user.",
        "operationId" : "getSiteDocumentsRatedByMePage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/documents/{documentId}" : {
      "delete" : {
        "description" : "Deletes the document and returns a 204 if the operation succeeds.",
        "operationId" : "deleteDocument",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "get" : {
        "description" : "Retrieves the document.",
        "operationId" : "getDocument",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "patch" : {
        "description" : "Updates only the fields received in the request body, leaving any other fields untouched. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`document`) with the metadata.",
        "operationId" : "patchDocument",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "put" : {
        "description" : "Replaces the document with the information sent in the request body. Any missing fields are deleted, unless they are required. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`document`) with the metadata.",
        "operationId" : "putDocument",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/documents/{documentId}/my-rating" : {
      "delete" : {
        "description" : "Deletes the document's rating and returns a 204 if the operation succeeded.",
        "operationId" : "deleteDocumentMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "get" : {
        "description" : "Retrieves the document's rating.",
        "operationId" : "getDocumentMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "post" : {
        "description" : "Creates a new rating for the document, by the user who authenticated the request.",
        "operationId" : "postDocumentMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "put" : {
        "description" : "Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putDocumentMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/sites/{siteId}/documents" : {
      "get" : {
        "description" : "Retrieves the documents in the site's root folder. Results can be paginated, filtered, searched, flattened, and sorted.",
        "operationId" : "getSiteDocumentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDocument"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "post" : {
        "description" : "Creates a new document. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`document`) with the metadata.",
        "operationId" : "postSiteDocument",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Document"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/documents/permissions" : {
      "get" : {
        "operationId" : "getAssetLibraryDocumentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "put" : {
        "operationId" : "putAssetLibraryDocumentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/documents/batch" : {
      "post" : {
        "operationId" : "postAssetLibraryDocumentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/documents/export-batch" : {
      "post" : {
        "operationId" : "postAssetLibraryDocumentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/document-folders/{documentFolderId}/documents/export-batch" : {
      "post" : {
        "operationId" : "postDocumentFolderDocumentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/document-folders/{documentFolderId}/documents/batch" : {
      "post" : {
        "operationId" : "postDocumentFolderDocumentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/sites/{siteId}/documents/export-batch" : {
      "post" : {
        "operationId" : "postSiteDocumentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/sites/{siteId}/documents/permissions" : {
      "get" : {
        "operationId" : "getSiteDocumentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "put" : {
        "operationId" : "putSiteDocumentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/documents/batch" : {
      "delete" : {
        "operationId" : "deleteDocumentBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "put" : {
        "operationId" : "putDocumentBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/documents/{documentId}/permissions" : {
      "get" : {
        "operationId" : "getDocumentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      },
      "put" : {
        "operationId" : "putDocumentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "documentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/sites/{siteId}/documents/batch" : {
      "post" : {
        "operationId" : "postSiteDocumentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Document" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the knowledge base article by external reference code.",
        "operationId" : "deleteSiteKnowledgeBaseArticleByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "get" : {
        "description" : "Retrieves the site's knowledge base article by external reference code.",
        "operationId" : "getSiteKnowledgeBaseArticleByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "put" : {
        "description" : "Updates the site's knowledge base article with the given external reference code, or creates it if it not exists.",
        "operationId" : "putSiteKnowledgeBaseArticleByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles" : {
      "get" : {
        "description" : "Retrieves the folder's knowledge base articles. Results can be paginated, filtered, searched, flattened, and sorted.",
        "operationId" : "getKnowledgeBaseFolderKnowledgeBaseArticlesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "post" : {
        "description" : "Creates a new knowledge base article in the folder.",
        "operationId" : "postKnowledgeBaseFolderKnowledgeBaseArticle",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-articles/{parentKnowledgeBaseArticleId}/knowledge-base-articles" : {
      "get" : {
        "description" : "Retrieves the parent knowledge base article's child knowledge base articles. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getKnowledgeBaseArticleKnowledgeBaseArticlesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentKnowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "post" : {
        "description" : "Creates a child knowledge base article of the knowledge base article identified by `parentKnowledgeBaseArticleId`.",
        "operationId" : "postKnowledgeBaseArticleKnowledgeBaseArticle",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentKnowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating" : {
      "delete" : {
        "description" : "Deletes the knowledge base article's rating and returns a 204 if the operation succeeds.",
        "operationId" : "deleteKnowledgeBaseArticleMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "get" : {
        "description" : "Retrieves the knowledge base article's rating.",
        "operationId" : "getKnowledgeBaseArticleMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "post" : {
        "description" : "Creates a rating for the knowledge base article.",
        "operationId" : "postKnowledgeBaseArticleMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "put" : {
        "description" : "Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putKnowledgeBaseArticleMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/subscribe" : {
      "put" : {
        "operationId" : "putKnowledgeBaseArticleSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/unsubscribe" : {
      "put" : {
        "operationId" : "putKnowledgeBaseArticleUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-articles" : {
      "get" : {
        "description" : "Retrieves the site's knowledge base articles. Results can be paginated, filtered, searched, flattened, and sorted.",
        "operationId" : "getSiteKnowledgeBaseArticlesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "post" : {
        "description" : "Creates a new knowledge base article.",
        "operationId" : "postSiteKnowledgeBaseArticle",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-articles/subscribe" : {
      "put" : {
        "operationId" : "putSiteKnowledgeBaseArticleSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-articles/unsubscribe" : {
      "put" : {
        "operationId" : "putSiteKnowledgeBaseArticleUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}" : {
      "delete" : {
        "description" : "Deletes the knowledge base article and returns a 204 if the operation succeeds.",
        "operationId" : "deleteKnowledgeBaseArticle",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "get" : {
        "description" : "Retrieves the knowledge base article.",
        "operationId" : "getKnowledgeBaseArticle",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "patch" : {
        "description" : "Updates only the fields received in the request body, leaving any other fields untouched.",
        "operationId" : "patchKnowledgeBaseArticle",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "put" : {
        "description" : "Replaces the knowledge base article with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putKnowledgeBaseArticle",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseArticle"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-articles/export-batch" : {
      "post" : {
        "operationId" : "postSiteKnowledgeBaseArticlesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles/batch" : {
      "post" : {
        "operationId" : "postKnowledgeBaseFolderKnowledgeBaseArticleBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-articles/batch" : {
      "delete" : {
        "operationId" : "deleteKnowledgeBaseArticleBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "put" : {
        "operationId" : "putKnowledgeBaseArticleBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/permissions" : {
      "get" : {
        "operationId" : "getKnowledgeBaseArticlePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "put" : {
        "operationId" : "putKnowledgeBaseArticlePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-articles/batch" : {
      "post" : {
        "operationId" : "postSiteKnowledgeBaseArticleBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-articles/permissions" : {
      "get" : {
        "operationId" : "getSiteKnowledgeBaseArticlePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      },
      "put" : {
        "operationId" : "putSiteKnowledgeBaseArticlePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles/export-batch" : {
      "post" : {
        "operationId" : "postKnowledgeBaseFolderKnowledgeBaseArticlesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseArticle" ]
      }
    },
    "/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments" : {
      "get" : {
        "description" : "Retrieves the knowledge base article's attachments.",
        "operationId" : "getKnowledgeBaseArticleKnowledgeBaseAttachmentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseAttachment" ]
      },
      "post" : {
        "description" : "Creates a new attachment for an existing knowledge base article. The request body must be `multipart/form-data` with two parts, a `file` part with the file's bytes, and an optional JSON string (`knowledgeBaseAttachment`) with the metadata.",
        "operationId" : "postKnowledgeBaseArticleKnowledgeBaseAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseAttachment" ]
      }
    },
    "/v1.0/knowledge-base-attachments/{knowledgeBaseAttachmentId}" : {
      "delete" : {
        "description" : "Deletes the knowledge base file attachment and returns a 204 if the operation succeeds.",
        "operationId" : "deleteKnowledgeBaseAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseAttachmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseAttachment" ]
      },
      "get" : {
        "description" : "Retrieves the knowledge base attachment.",
        "operationId" : "getKnowledgeBaseAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseAttachmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseAttachment" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{knowledgeBaseArticleExternalReferenceCode}/knowledge-base-attachments/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Delete the knowledge base attachment by knowledge base article's and knowledge base attachment's external reference codes.",
        "operationId" : "deleteSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "knowledgeBaseArticleExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseAttachment" ]
      },
      "get" : {
        "description" : "Retrieves the knowledge base article attachment by external reference code.",
        "operationId" : "getSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "knowledgeBaseArticleExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseAttachment" ]
      }
    },
    "/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments/batch" : {
      "post" : {
        "operationId" : "postKnowledgeBaseArticleKnowledgeBaseAttachmentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseAttachment" ]
      }
    },
    "/v1.0/knowledge-base-attachments/batch" : {
      "delete" : {
        "operationId" : "deleteKnowledgeBaseAttachmentBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseAttachment" ]
      }
    },
    "/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments/export-batch" : {
      "post" : {
        "operationId" : "postKnowledgeBaseArticleKnowledgeBaseAttachmentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseArticleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseAttachment" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-folders/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the knowledge base folder by external reference code.",
        "operationId" : "deleteSiteKnowledgeBaseFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "get" : {
        "description" : "Retrieves the site's knowledge base folder by external reference code.",
        "operationId" : "getSiteKnowledgeBaseFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "put" : {
        "description" : "Updates the site's knowledge base folder with the given external reference code, or creates it if it not exists.",
        "operationId" : "putSiteKnowledgeBaseFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      }
    },
    "/v1.0/knowledge-base-folders/{parentKnowledgeBaseFolderId}/knowledge-base-folders" : {
      "get" : {
        "description" : "Retrieves the knowledge base folder's subfolders.",
        "operationId" : "getKnowledgeBaseFolderKnowledgeBaseFoldersPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentKnowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "post" : {
        "description" : "Creates a knowledge base folder inside the parent folder.",
        "operationId" : "postKnowledgeBaseFolderKnowledgeBaseFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentKnowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-folders" : {
      "get" : {
        "description" : "Retrieves the site's knowledge base folders. Results can be paginated.",
        "operationId" : "getSiteKnowledgeBaseFoldersPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageKnowledgeBaseFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "post" : {
        "description" : "Creates a new knowledge base folder.",
        "operationId" : "postSiteKnowledgeBaseFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      }
    },
    "/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}" : {
      "delete" : {
        "description" : "Deletes the knowledge base folder and returns a 204 if the operation succeeds.",
        "operationId" : "deleteKnowledgeBaseFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "get" : {
        "description" : "Retrieves the knowledge base folder.",
        "operationId" : "getKnowledgeBaseFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "patch" : {
        "description" : "Updates only the fields received in the request body, leaving any other fields untouched.",
        "operationId" : "patchKnowledgeBaseFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "put" : {
        "description" : "Replaces the knowledge base folder with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putKnowledgeBaseFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/KnowledgeBaseFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KnowledgeBaseFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-folders/export-batch" : {
      "post" : {
        "operationId" : "postSiteKnowledgeBaseFoldersPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-folders/permissions" : {
      "get" : {
        "operationId" : "getSiteKnowledgeBaseFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "put" : {
        "operationId" : "putSiteKnowledgeBaseFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/knowledge-base-folders/batch" : {
      "post" : {
        "operationId" : "postSiteKnowledgeBaseFolderBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      }
    },
    "/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/permissions" : {
      "get" : {
        "operationId" : "getKnowledgeBaseFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "put" : {
        "operationId" : "putKnowledgeBaseFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "knowledgeBaseFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      }
    },
    "/v1.0/knowledge-base-folders/batch" : {
      "delete" : {
        "operationId" : "deleteKnowledgeBaseFolderBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      },
      "put" : {
        "operationId" : "putKnowledgeBaseFolderBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "KnowledgeBaseFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/languages" : {
      "get" : {
        "description" : "Retrieves the asset libraries languages.",
        "operationId" : "getAssetLibraryLanguagesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageLanguage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageLanguage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Language" ]
      }
    },
    "/v1.0/sites/{siteId}/languages" : {
      "get" : {
        "description" : "Retrieves the site's languages.",
        "operationId" : "getSiteLanguagesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageLanguage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageLanguage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Language" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/languages/export-batch" : {
      "post" : {
        "operationId" : "postAssetLibraryLanguagesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Language" ]
      }
    },
    "/v1.0/sites/{siteId}/languages/export-batch" : {
      "post" : {
        "operationId" : "postSiteLanguagesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Language" ]
      }
    },
    "/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments" : {
      "get" : {
        "description" : "Retrieves the message board message's attachments.",
        "operationId" : "getMessageBoardMessageMessageBoardAttachmentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      },
      "post" : {
        "description" : "Creates an attachment for the message board message. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`MessageBoardAttachment`) with the metadata.",
        "operationId" : "postMessageBoardMessageMessageBoardAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments" : {
      "get" : {
        "description" : "Retrieves the message board thread's attachments.",
        "operationId" : "getMessageBoardThreadMessageBoardAttachmentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      },
      "post" : {
        "description" : "Creates a new attachment for the message board thread. The request body should be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`knowledgeBaseAttachment`) with the metadata.",
        "operationId" : "postMessageBoardThreadMessageBoardAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      }
    },
    "/v1.0/message-board-attachments/{messageBoardAttachmentId}" : {
      "delete" : {
        "description" : "Deletes the message board attachment and returns a 204 if the operation succeeds.",
        "operationId" : "deleteMessageBoardAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardAttachmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      },
      "get" : {
        "description" : "Retrieves the message board attachment.",
        "operationId" : "getMessageBoardAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardAttachmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{messageBoardMessageExternalReferenceCode}/message-board-attachments/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Delete the message board attachment by message board message's and message board attachment's external reference codes.",
        "operationId" : "deleteSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "messageBoardMessageExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      },
      "get" : {
        "description" : "Retrieves the message board attachment by message board message's and message board attachment's external reference codes.",
        "operationId" : "getSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "messageBoardMessageExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      }
    },
    "/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments/batch" : {
      "post" : {
        "operationId" : "postMessageBoardMessageMessageBoardAttachmentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments/batch" : {
      "post" : {
        "operationId" : "postMessageBoardThreadMessageBoardAttachmentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      }
    },
    "/v1.0/message-board-attachments/batch" : {
      "delete" : {
        "operationId" : "deleteMessageBoardAttachmentBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments/export-batch" : {
      "post" : {
        "operationId" : "postMessageBoardThreadMessageBoardAttachmentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      }
    },
    "/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments/export-batch" : {
      "post" : {
        "operationId" : "postMessageBoardMessageMessageBoardAttachmentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardAttachment" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the site's message board message by external reference code.",
        "operationId" : "deleteSiteMessageBoardMessageByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "get" : {
        "description" : "Retrieves the site's message board message by external reference code.",
        "operationId" : "getSiteMessageBoardMessageByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "put" : {
        "description" : "Updates the site's message board message with the given external reference code, or creates it if it not exists.",
        "operationId" : "putSiteMessageBoardMessageByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-messages/{parentMessageBoardMessageId}/message-board-messages" : {
      "get" : {
        "description" : "Retrieves the parent message board message's child messages. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getMessageBoardMessageMessageBoardMessagesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentMessageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "post" : {
        "description" : "Creates a child message board message of the parent message.",
        "operationId" : "postMessageBoardMessageMessageBoardMessage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentMessageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages" : {
      "get" : {
        "description" : "Retrieves the message board thread's messages. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getMessageBoardThreadMessageBoardMessagesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "post" : {
        "description" : "Creates a new message in the message board thread.",
        "operationId" : "postMessageBoardThreadMessageBoardMessage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-messages/by-friendly-url-path/{friendlyUrlPath}" : {
      "get" : {
        "operationId" : "getSiteMessageBoardMessageByFriendlyUrlPath",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "friendlyUrlPath",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-messages" : {
      "get" : {
        "description" : "Retrieves the site's message board messages.",
        "operationId" : "getSiteMessageBoardMessagesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-messages/{messageBoardMessageId}/my-rating" : {
      "delete" : {
        "description" : "Deletes the message board message's rating and returns a 204 if the operation succeeds.",
        "operationId" : "deleteMessageBoardMessageMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "get" : {
        "description" : "Retrieves the message board message's rating.",
        "operationId" : "getMessageBoardMessageMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "post" : {
        "description" : "Creates a rating for the message board message.",
        "operationId" : "postMessageBoardMessageMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "put" : {
        "description" : "Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putMessageBoardMessageMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-messages/{messageBoardMessageId}/unsubscribe" : {
      "put" : {
        "operationId" : "putMessageBoardMessageUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-messages/{messageBoardMessageId}/subscribe" : {
      "put" : {
        "operationId" : "putMessageBoardMessageSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-messages/{messageBoardMessageId}" : {
      "delete" : {
        "description" : "Deletes the message board message and returns a 204 if the operation succeeds.",
        "operationId" : "deleteMessageBoardMessage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "get" : {
        "description" : "Retrieves the message board message.",
        "operationId" : "getMessageBoardMessage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "patch" : {
        "description" : "Updates only the fields received in the request body, leaving any other fields untouched.",
        "operationId" : "patchMessageBoardMessage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "put" : {
        "description" : "Replaces the message board message with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putMessageBoardMessage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardMessage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardMessage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages/batch" : {
      "post" : {
        "operationId" : "postMessageBoardThreadMessageBoardMessageBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages/export-batch" : {
      "post" : {
        "operationId" : "postMessageBoardThreadMessageBoardMessagesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-messages/export-batch" : {
      "post" : {
        "operationId" : "postSiteMessageBoardMessagesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-messages/{messageBoardMessageId}/permissions" : {
      "get" : {
        "operationId" : "getMessageBoardMessagePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "put" : {
        "operationId" : "putMessageBoardMessagePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardMessageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-messages/batch" : {
      "delete" : {
        "operationId" : "deleteMessageBoardMessageBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "put" : {
        "operationId" : "putMessageBoardMessageBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-messages/permissions" : {
      "get" : {
        "operationId" : "getSiteMessageBoardMessagePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      },
      "put" : {
        "operationId" : "putSiteMessageBoardMessagePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardMessage" ]
      }
    },
    "/v1.0/message-board-sections/{parentMessageBoardSectionId}/message-board-sections" : {
      "get" : {
        "description" : "Retrieves the parent message board section's subsections. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getMessageBoardSectionMessageBoardSectionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentMessageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardSection"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardSection"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      },
      "post" : {
        "description" : "Creates a new message board section in the parent section.",
        "operationId" : "postMessageBoardSectionMessageBoardSection",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentMessageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardSection"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardSection"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-sections" : {
      "get" : {
        "description" : "Retrieves the site's message board sections. Results can be paginated, filtered, searched, flattened, and sorted.",
        "operationId" : "getSiteMessageBoardSectionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardSection"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardSection"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      },
      "post" : {
        "description" : "Creates a new message board section.",
        "operationId" : "postSiteMessageBoardSection",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardSection"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardSection"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/message-board-sections/{messageBoardSectionId}/subscribe" : {
      "put" : {
        "operationId" : "putMessageBoardSectionSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/message-board-sections/{messageBoardSectionId}/unsubscribe" : {
      "put" : {
        "operationId" : "putMessageBoardSectionUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/message-board-sections/{messageBoardSectionId}" : {
      "delete" : {
        "description" : "Deletes the message board section and returns a 204 if the operation succeeds.",
        "operationId" : "deleteMessageBoardSection",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      },
      "get" : {
        "description" : "Retrieves the message board section.",
        "operationId" : "getMessageBoardSection",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      },
      "patch" : {
        "description" : "Updates only the fields received in the request body, leaving any other fields untouched.",
        "operationId" : "patchMessageBoardSection",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardSection"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardSection"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      },
      "put" : {
        "description" : "Replaces the message board section with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putMessageBoardSection",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardSection"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardSection"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardSection"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-sections/export-batch" : {
      "post" : {
        "operationId" : "postSiteMessageBoardSectionsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-sections/batch" : {
      "post" : {
        "operationId" : "postSiteMessageBoardSectionBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/message-board-sections/batch" : {
      "delete" : {
        "operationId" : "deleteMessageBoardSectionBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      },
      "put" : {
        "operationId" : "putMessageBoardSectionBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/message-board-sections/{messageBoardSectionId}/permissions" : {
      "get" : {
        "operationId" : "getMessageBoardSectionPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      },
      "put" : {
        "operationId" : "putMessageBoardSectionPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-sections/permissions" : {
      "get" : {
        "operationId" : "getSiteMessageBoardSectionPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      },
      "put" : {
        "operationId" : "putSiteMessageBoardSectionPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardSection" ]
      }
    },
    "/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads" : {
      "get" : {
        "description" : "Retrieves the message board section's threads. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getMessageBoardSectionMessageBoardThreadsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardThread"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardThread"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "post" : {
        "description" : "Creates a new message board thread inside a section.",
        "operationId" : "postMessageBoardSectionMessageBoardThread",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardThread"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardThread"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/my-rating" : {
      "delete" : {
        "description" : "Deletes the message board thread's rating and returns a 204 if the operation succeeds.",
        "operationId" : "deleteMessageBoardThreadMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "get" : {
        "description" : "Retrieves the message board thread's rating.",
        "operationId" : "getMessageBoardThreadMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "post" : {
        "description" : "Creates the message board thread's rating.",
        "operationId" : "postMessageBoardThreadMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "put" : {
        "description" : "Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putMessageBoardThreadMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/message-board-threads/ranked" : {
      "get" : {
        "operationId" : "getMessageBoardThreadsRankedPage",
        "parameters" : [ {
          "in" : "query",
          "name" : "dateCreated",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "dateModified",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "messageBoardSectionId",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardThread"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardThread"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-threads/by-friendly-url-path/{friendlyUrlPath}" : {
      "get" : {
        "operationId" : "getSiteMessageBoardThreadByFriendlyUrlPath",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "friendlyUrlPath",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/subscribe" : {
      "put" : {
        "operationId" : "putMessageBoardThreadSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/unsubscribe" : {
      "put" : {
        "operationId" : "putMessageBoardThreadUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-threads" : {
      "get" : {
        "description" : "Retrieves the site's message board threads. Results can be paginated, filtered, searched, flattened, and sorted.",
        "operationId" : "getSiteMessageBoardThreadsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardThread"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageMessageBoardThread"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "post" : {
        "description" : "Creates a new message board thread.",
        "operationId" : "postSiteMessageBoardThread",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardThread"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardThread"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}" : {
      "delete" : {
        "description" : "Deletes the message board thread and returns a 204 if the operation succeeds.",
        "operationId" : "deleteMessageBoardThread",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "get" : {
        "description" : "Retrieves the message board thread.",
        "operationId" : "getMessageBoardThread",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "patch" : {
        "description" : "Updates only the fields received in the request body, leaving any other fields untouched.",
        "operationId" : "patchMessageBoardThread",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardThread"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardThread"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "put" : {
        "description" : "Replaces the message board thread with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putMessageBoardThread",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardThread"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageBoardThread"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageBoardThread"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads/batch" : {
      "post" : {
        "operationId" : "postMessageBoardSectionMessageBoardThreadBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads/export-batch" : {
      "post" : {
        "operationId" : "postMessageBoardSectionMessageBoardThreadsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardSectionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-threads/batch" : {
      "post" : {
        "operationId" : "postSiteMessageBoardThreadBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/message-board-threads/batch" : {
      "delete" : {
        "operationId" : "deleteMessageBoardThreadBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "put" : {
        "operationId" : "putMessageBoardThreadBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/message-board-threads/{messageBoardThreadId}/permissions" : {
      "get" : {
        "operationId" : "getMessageBoardThreadPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "put" : {
        "operationId" : "putMessageBoardThreadPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "messageBoardThreadId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-threads/export-batch" : {
      "post" : {
        "operationId" : "postSiteMessageBoardThreadsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/sites/{siteId}/message-board-threads/permissions" : {
      "get" : {
        "operationId" : "getSiteMessageBoardThreadPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      },
      "put" : {
        "operationId" : "putSiteMessageBoardThreadPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "MessageBoardThread" ]
      }
    },
    "/v1.0/navigation-menus/{navigationMenuId}" : {
      "delete" : {
        "description" : "Deletes the navigation menu and returns a 204 if the operation succeeds",
        "operationId" : "deleteNavigationMenu",
        "parameters" : [ {
          "in" : "path",
          "name" : "navigationMenuId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      },
      "get" : {
        "operationId" : "getNavigationMenu",
        "parameters" : [ {
          "in" : "path",
          "name" : "navigationMenuId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NavigationMenu"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NavigationMenu"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      },
      "put" : {
        "description" : "Replaces the navigation menu with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putNavigationMenu",
        "parameters" : [ {
          "in" : "path",
          "name" : "navigationMenuId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NavigationMenu"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NavigationMenu"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NavigationMenu"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NavigationMenu"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      }
    },
    "/v1.0/sites/{siteId}/navigation-menus" : {
      "get" : {
        "operationId" : "getSiteNavigationMenusPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageNavigationMenu"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageNavigationMenu"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      },
      "post" : {
        "description" : "Creates a new navigation menu.",
        "operationId" : "postSiteNavigationMenu",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NavigationMenu"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NavigationMenu"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NavigationMenu"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NavigationMenu"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      }
    },
    "/v1.0/sites/{siteId}/navigation-menus/batch" : {
      "post" : {
        "operationId" : "postSiteNavigationMenuBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      }
    },
    "/v1.0/navigation-menus/{navigationMenuId}/permissions" : {
      "get" : {
        "operationId" : "getNavigationMenuPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "navigationMenuId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      },
      "put" : {
        "operationId" : "putNavigationMenuPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "navigationMenuId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      }
    },
    "/v1.0/sites/{siteId}/navigation-menus/export-batch" : {
      "post" : {
        "operationId" : "postSiteNavigationMenusPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      }
    },
    "/v1.0/sites/{siteId}/navigation-menus/permissions" : {
      "get" : {
        "operationId" : "getSiteNavigationMenuPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      },
      "put" : {
        "operationId" : "putSiteNavigationMenuPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      }
    },
    "/v1.0/navigation-menus/batch" : {
      "delete" : {
        "operationId" : "deleteNavigationMenuBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      },
      "put" : {
        "operationId" : "putNavigationMenuBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "NavigationMenu" ]
      }
    },
    "/v1.0/openapi.{type}" : {
      "get" : {
        "operationId" : "getOpenAPI",
        "parameters" : [ {
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/yaml" : { }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}/rendered-page" : {
      "get" : {
        "description" : "Retrieves the rendered content of a given public page for a given experience.",
        "operationId" : "getSiteSitePageExperienceExperienceKeyRenderedPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "friendlyUrlPath",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "experienceKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SitePage" ]
      }
    },
    "/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}" : {
      "get" : {
        "description" : "Retrieves a specific public page of a site for a given experience",
        "operationId" : "getSiteSitePageExperienceExperienceKey",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "friendlyUrlPath",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "experienceKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SitePage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SitePage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SitePage" ]
      }
    },
    "/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/rendered-page" : {
      "get" : {
        "description" : "Retrieves the rendered content of a given public page.",
        "operationId" : "getSiteSitePageRenderedPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "friendlyUrlPath",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SitePage" ]
      }
    },
    "/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences" : {
      "get" : {
        "description" : "Retrieves the experiences of a given Page",
        "operationId" : "getSiteSitePagesExperiencesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "friendlyUrlPath",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSitePage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSitePage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SitePage" ]
      }
    },
    "/v1.0/sites/{siteId}/site-pages" : {
      "get" : {
        "description" : "Retrieves the public pages of the site",
        "operationId" : "getSiteSitePagesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSitePage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSitePage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SitePage" ]
      },
      "post" : {
        "description" : "Adds a new site page",
        "operationId" : "postSiteSitePage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SitePage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SitePage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SitePage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SitePage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SitePage" ]
      }
    },
    "/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}" : {
      "get" : {
        "description" : "Retrieves a specific public page of a site",
        "operationId" : "getSiteSitePage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "friendlyUrlPath",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SitePage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SitePage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SitePage" ]
      }
    },
    "/v1.0/sites/{siteId}/site-pages/export-batch" : {
      "post" : {
        "operationId" : "postSiteSitePagesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SitePage" ]
      }
    },
    "/v1.0/sites/{siteId}/site-pages/batch" : {
      "post" : {
        "operationId" : "postSiteSitePageBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SitePage" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "operationId" : "deleteSiteStructuredContentFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "get" : {
        "operationId" : "getSiteStructuredContentFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "put" : {
        "operationId" : "putSiteStructuredContentFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders" : {
      "get" : {
        "operationId" : "getAssetLibraryStructuredContentFoldersPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "post" : {
        "operationId" : "postAssetLibraryStructuredContentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/structured-content-folders/{parentStructuredContentFolderId}/structured-content-folders" : {
      "get" : {
        "description" : "Retrieves the parent structured content folder's subfolders. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getStructuredContentFolderStructuredContentFoldersPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentStructuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "post" : {
        "description" : "Creates a new structured content folder in an existing folder.",
        "operationId" : "postStructuredContentFolderStructuredContentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentStructuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/structured-content-folders/{structuredContentFolderId}/subscribe" : {
      "put" : {
        "operationId" : "putStructuredContentFolderSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/structured-content-folders/{structuredContentFolderId}/unsubscribe" : {
      "put" : {
        "operationId" : "putStructuredContentFolderUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/structured-content-folders/{structuredContentFolderId}" : {
      "delete" : {
        "description" : "Deletes the structured content folder and returns a 204 if the operation succeeds.",
        "operationId" : "deleteStructuredContentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "get" : {
        "description" : "Retrieves the structured content folder.",
        "operationId" : "getStructuredContentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "patch" : {
        "description" : "Updates only the fields received in the request body, leaving any other fields untouched.",
        "operationId" : "patchStructuredContentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "put" : {
        "description" : "Replaces the structured content folder with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putStructuredContentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-content-folders" : {
      "get" : {
        "description" : "Retrieves the site's structured content folders. Results can be paginated, filtered, searched, flattened, and sorted.",
        "operationId" : "getSiteStructuredContentFoldersPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "post" : {
        "description" : "Creates a new structured content folder.",
        "operationId" : "postSiteStructuredContentFolder",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the asset library's structured content folder by external reference code.",
        "operationId" : "deleteAssetLibraryStructuredContentFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "get" : {
        "description" : "Retrieves the asset library's structured content folder by external reference code.",
        "operationId" : "getAssetLibraryStructuredContentFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "put" : {
        "description" : "Updates the asset library's structured content folder with the given external reference code, or creates it if it not exists.",
        "operationId" : "putAssetLibraryStructuredContentFolderByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContentFolder"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContentFolder"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-content-folders/export-batch" : {
      "post" : {
        "operationId" : "postSiteStructuredContentFoldersPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-content-folders/permissions" : {
      "get" : {
        "operationId" : "getSiteStructuredContentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "put" : {
        "operationId" : "putSiteStructuredContentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/permissions" : {
      "get" : {
        "operationId" : "getAssetLibraryStructuredContentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "put" : {
        "operationId" : "putAssetLibraryStructuredContentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/batch" : {
      "post" : {
        "operationId" : "postAssetLibraryStructuredContentFolderBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/export-batch" : {
      "post" : {
        "operationId" : "postAssetLibraryStructuredContentFoldersPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/structured-content-folders/batch" : {
      "delete" : {
        "operationId" : "deleteStructuredContentFolderBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "put" : {
        "operationId" : "putStructuredContentFolderBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/structured-content-folder/{structuredContentFolderId}/permissions" : {
      "get" : {
        "operationId" : "getStructuredContentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      },
      "put" : {
        "operationId" : "putStructuredContentFolderPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-content-folders/batch" : {
      "post" : {
        "operationId" : "postSiteStructuredContentFolderBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContentFolder" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}/rendered-content/{contentTemplateId}" : {
      "get" : {
        "description" : "Retrieves the structured content's rendered template (the result of applying the structure's values to a template).",
        "operationId" : "getStructuredContentRenderedContentContentTemplate",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "contentTemplateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-contents/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the asset library's structured content by external reference code.",
        "operationId" : "deleteAssetLibraryStructuredContentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "get" : {
        "operationId" : "getAssetLibraryStructuredContentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "put" : {
        "description" : "Updates the asset library's structured content with the given external reference code, or creates it if it not exists.",
        "operationId" : "putAssetLibraryStructuredContentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the site's structured content by external reference code.",
        "operationId" : "deleteSiteStructuredContentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "get" : {
        "description" : "Retrieves the site's structured content by external reference code.",
        "operationId" : "getSiteStructuredContentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "put" : {
        "description" : "Updates the site's structured content with the given external reference code, or creates it if it not exists.",
        "operationId" : "putSiteStructuredContentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents" : {
      "get" : {
        "description" : "Retrieves the folder's structured content. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getStructuredContentFolderStructuredContentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "post" : {
        "description" : "Creates a new structured content in the folder.",
        "operationId" : "postStructuredContentFolderStructuredContent",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}/my-rating" : {
      "delete" : {
        "description" : "Deletes the structured content's rating and returns a 204 if the operation succeeds.",
        "operationId" : "deleteStructuredContentMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "get" : {
        "description" : "Retrieves the structured content's rating.",
        "operationId" : "getStructuredContentMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "post" : {
        "description" : "Create a rating for the structured content.",
        "operationId" : "postStructuredContentMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "put" : {
        "description" : "Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putStructuredContentMyRating",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-contents" : {
      "get" : {
        "operationId" : "getAssetLibraryStructuredContentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "post" : {
        "operationId" : "postAssetLibraryStructuredContent",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/content-structures/{contentStructureId}/structured-contents" : {
      "get" : {
        "description" : "Retrieves a list of the content structure's structured content. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getContentStructureStructuredContentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "contentStructureId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-contents/by-key/{key}" : {
      "get" : {
        "description" : "Retrieves a structured content by its key (`articleKey`).",
        "operationId" : "getSiteStructuredContentByKey",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-contents/by-uuid/{uuid}" : {
      "get" : {
        "description" : "Retrieves a structured content by its UUID.",
        "operationId" : "getSiteStructuredContentByUuid",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-contents" : {
      "get" : {
        "description" : "Retrieves the site's structured content. Results can be paginated, filtered, searched, flattened, and sorted.",
        "operationId" : "getSiteStructuredContentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageStructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "post" : {
        "description" : "Creates a new structured content.",
        "operationId" : "postSiteStructuredContent",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}/subscribe" : {
      "put" : {
        "operationId" : "putStructuredContentSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}/unsubscribe" : {
      "put" : {
        "operationId" : "putStructuredContentUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}" : {
      "delete" : {
        "description" : "Deletes the structured content and returns a 204 if the operation succeeds.",
        "operationId" : "deleteStructuredContent",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "get" : {
        "description" : "Retrieves the structured content via its ID.",
        "operationId" : "getStructuredContent",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "patch" : {
        "description" : "Updates only the fields received in the request body, leaving any other fields untouched.",
        "operationId" : "patchStructuredContent",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "put" : {
        "description" : "Replaces the structured content with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putStructuredContent",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/StructuredContent"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StructuredContent"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}/rendered-content-by-display-page/{displayPageKey}" : {
      "get" : {
        "description" : "Retrieves the structured content's rendered display page",
        "operationId" : "getStructuredContentRenderedContentByDisplayPageDisplayPageKey",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "displayPageKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents/batch" : {
      "post" : {
        "operationId" : "postStructuredContentFolderStructuredContentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-contents/export-batch" : {
      "post" : {
        "operationId" : "postAssetLibraryStructuredContentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-contents/permissions" : {
      "get" : {
        "operationId" : "getAssetLibraryStructuredContentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "put" : {
        "operationId" : "putAssetLibraryStructuredContentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/content-structures/{contentStructureId}/structured-contents/export-batch" : {
      "post" : {
        "operationId" : "postContentStructureStructuredContentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "contentStructureId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/asset-libraries/{assetLibraryId}/structured-contents/batch" : {
      "post" : {
        "operationId" : "postAssetLibraryStructuredContentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "assetLibraryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-contents/batch" : {
      "delete" : {
        "operationId" : "deleteStructuredContentBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "put" : {
        "operationId" : "putStructuredContentBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-contents/batch" : {
      "post" : {
        "operationId" : "postSiteStructuredContentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-contents/export-batch" : {
      "post" : {
        "operationId" : "postSiteStructuredContentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/sites/{siteId}/structured-contents/permissions" : {
      "get" : {
        "operationId" : "getSiteStructuredContentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "put" : {
        "operationId" : "putSiteStructuredContentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-contents/{structuredContentId}/permissions" : {
      "get" : {
        "operationId" : "getStructuredContentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      },
      "put" : {
        "operationId" : "putStructuredContentPermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents/export-batch" : {
      "post" : {
        "operationId" : "postStructuredContentFolderStructuredContentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "structuredContentFolderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "StructuredContent" ]
      }
    },
    "/v1.0/sites/{siteId}/wiki-nodes/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the site's wiki node by external reference code.",
        "operationId" : "deleteSiteWikiNodeByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      },
      "get" : {
        "description" : "Retrieves the site's wiki node by external reference code.",
        "operationId" : "getSiteWikiNodeByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      },
      "put" : {
        "description" : "Updates the site's wiki node with the given external reference code, or creates it if it not exists.",
        "operationId" : "putSiteWikiNodeByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiNode"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiNode"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/wiki-nodes/{wikiNodeId}" : {
      "delete" : {
        "description" : "Deletes the wiki node and returns a 204 if the operation succeeds.",
        "operationId" : "deleteWikiNode",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      },
      "get" : {
        "description" : "Retrieves the wiki node",
        "operationId" : "getWikiNode",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      },
      "put" : {
        "description" : "Replaces the wiki node with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putWikiNode",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiNode"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiNode"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/sites/{siteId}/wiki-nodes" : {
      "get" : {
        "description" : "Retrieves the wiki node's of a site. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getSiteWikiNodesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWikiNode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWikiNode"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      },
      "post" : {
        "description" : "Creates a new wiki node",
        "operationId" : "postSiteWikiNode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiNode"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiNode"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiNode"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/wiki-nodes/{wikiNodeId}/subscribe" : {
      "put" : {
        "operationId" : "putWikiNodeSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/wiki-nodes/{wikiNodeId}/unsubscribe" : {
      "put" : {
        "operationId" : "putWikiNodeUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/sites/{siteId}/wiki-nodes/export-batch" : {
      "post" : {
        "operationId" : "postSiteWikiNodesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/sites/{siteId}/wiki-nodes/permissions" : {
      "get" : {
        "operationId" : "getSiteWikiNodePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      },
      "put" : {
        "operationId" : "putSiteWikiNodePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/sites/{siteId}/wiki-nodes/batch" : {
      "post" : {
        "operationId" : "postSiteWikiNodeBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/wiki-nodes/batch" : {
      "delete" : {
        "operationId" : "deleteWikiNodeBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      },
      "put" : {
        "operationId" : "putWikiNodeBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/wiki-nodes/{wikiNodeId}/permissions" : {
      "get" : {
        "operationId" : "getWikiNodePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      },
      "put" : {
        "operationId" : "putWikiNodePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiNode" ]
      }
    },
    "/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments" : {
      "get" : {
        "description" : "Retrieves the wiki page's attachments.",
        "operationId" : "getWikiPageWikiPageAttachmentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWikiPageAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWikiPageAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPageAttachment" ]
      },
      "post" : {
        "description" : "Creates an attachment for the wiki page. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`WikiPageAttachment`) with the metadata.",
        "operationId" : "postWikiPageWikiPageAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPageAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPageAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPageAttachment" ]
      }
    },
    "/v1.0/wiki-page-attachments/{wikiPageAttachmentId}" : {
      "delete" : {
        "description" : "Deletes the wiki page attachment and returns a 204 if the operation succeeds.",
        "operationId" : "deleteWikiPageAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageAttachmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPageAttachment" ]
      },
      "get" : {
        "description" : "Retrieves the wiki page attachment.",
        "operationId" : "getWikiPageAttachment",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageAttachmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPageAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPageAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPageAttachment" ]
      }
    },
    "/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{wikiPageExternalReferenceCode}/wiki-page-attachments/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Delete the wiki page attachment by wiki page's and wiki page attachment's external reference codes.",
        "operationId" : "deleteSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "wikiPageExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPageAttachment" ]
      },
      "get" : {
        "description" : "Retrieves the wiki page attachment by wiki page's and wiki page attachment's external reference codes.",
        "operationId" : "getSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "wikiPageExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPageAttachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPageAttachment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPageAttachment" ]
      }
    },
    "/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments/export-batch" : {
      "post" : {
        "operationId" : "postWikiPageWikiPageAttachmentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPageAttachment" ]
      }
    },
    "/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments/batch" : {
      "post" : {
        "operationId" : "postWikiPageWikiPageAttachmentBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPageAttachment" ]
      }
    },
    "/v1.0/wiki-page-attachments/batch" : {
      "delete" : {
        "operationId" : "deleteWikiPageAttachmentBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPageAttachment" ]
      }
    },
    "/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes the wiki page by external reference code.",
        "operationId" : "deleteSiteWikiPageByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      },
      "get" : {
        "description" : "Retrieves the wiki page by external reference code",
        "operationId" : "getSiteWikiPageByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      },
      "put" : {
        "description" : "Updates the wiki page with the given external reference code, or creates it if it not exists.",
        "operationId" : "putSiteWikiPageByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiPage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiPage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    },
    "/v1.0/wiki-pages/{wikiPageId}" : {
      "delete" : {
        "description" : "Deletes the wiki page and returns a 204 if the operation succeeds.",
        "operationId" : "deleteWikiPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      },
      "get" : {
        "description" : "Retrieves the wiki page",
        "operationId" : "getWikiPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      },
      "put" : {
        "description" : "Replaces the wiki page with the information sent in the request body. Any missing fields are deleted, unless they are required.",
        "operationId" : "putWikiPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiPage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiPage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    },
    "/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages" : {
      "get" : {
        "description" : "Retrieves the wiki page's of a node. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getWikiNodeWikiPagesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "aggregationTerms",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWikiPage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWikiPage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      },
      "post" : {
        "description" : "Creates a new wiki page",
        "operationId" : "postWikiNodeWikiPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiPage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiPage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    },
    "/v1.0/wiki-pages/{parentWikiPageId}/wiki-pages" : {
      "get" : {
        "description" : "Retrieves the child wiki page's of a wiki page.",
        "operationId" : "getWikiPageWikiPagesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentWikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWikiPage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWikiPage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      },
      "post" : {
        "description" : "Creates a child wiki page of the parent wiki page.",
        "operationId" : "postWikiPageWikiPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentWikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiPage"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/WikiPage"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WikiPage"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    },
    "/v1.0/wiki-pages/{wikiPageId}/subscribe" : {
      "put" : {
        "operationId" : "putWikiPageSubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    },
    "/v1.0/wiki-pages/{wikiPageId}/unsubscribe" : {
      "put" : {
        "operationId" : "putWikiPageUnsubscribe",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    },
    "/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages/export-batch" : {
      "post" : {
        "operationId" : "postWikiNodeWikiPagesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    },
    "/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages/batch" : {
      "post" : {
        "operationId" : "postWikiNodeWikiPageBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiNodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    },
    "/v1.0/wiki-pages/batch" : {
      "delete" : {
        "operationId" : "deleteWikiPageBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      },
      "put" : {
        "operationId" : "putWikiPageBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    },
    "/v1.0/wiki-pages/{wikiPageId}/permissions" : {
      "get" : {
        "operationId" : "getWikiPagePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "nestedFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "restrictFields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "roleNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      },
      "put" : {
        "operationId" : "putWikiPagePermissionsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "wikiPageId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePermission"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WikiPage" ]
      }
    }
  },
  "servers" : [ {
    "url" : "http://localhost:8080/o/headless-delivery/"
  } ]
}