{
  "components" : {
    "schemas" : {
      "Account" : {
        "description" : "An account represents an external account, for example a customer business.",
        "properties" : {
          "accountUserAccounts" : {
            "description" : "The users linked to the account",
            "items" : {
              "$ref" : "#/components/schemas/UserAccount"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions allowed by the user making the request.",
                "type" : "string"
              },
              "description" : "Block of actions allowed by the user making the request.",
              "type" : "object"
            },
            "description" : "Block of actions allowed by the user making the request.",
            "readOnly" : true,
            "type" : "object"
          },
          "customFields" : {
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "description" : {
            "type" : "string"
          },
          "domains" : {
            "description" : "The account's email domains. Users assigned to this account generally will have email addresses under one of these domains.",
            "items" : {
              "description" : "The account's email domains. Users assigned to this account generally will have email addresses under one of these domains.",
              "type" : "string"
            },
            "type" : "array"
          },
          "externalReferenceCode" : {
            "description" : "The optional external key of this account.",
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "numberOfUsers" : {
            "description" : "The number of this account's associated users.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "organizationIds" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "parentAccountId" : {
            "format" : "int64",
            "type" : "integer"
          },
          "status" : {
            "format" : "int32",
            "type" : "integer"
          },
          "type" : {
            "enum" : [ "business", "guest", "person", "supplier" ],
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Account",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object",
        "xml" : {
          "name" : "Account"
        }
      },
      "AccountBrief" : {
        "description" : "A list of the user's account.",
        "properties" : {
          "externalReferenceCode" : {
            "description" : "The account's external reference code.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The account's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The account's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "roleBriefs" : {
            "description" : "A list of the user's roles.",
            "items" : {
              "$ref" : "#/components/schemas/RoleBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.AccountBrief",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "AccountBrief"
        }
      },
      "CustomField" : {
        "properties" : {
          "customValue" : {
            "$ref" : "#/components/schemas/CustomValue"
          },
          "dataType" : {
            "description" : "The field type (e.g., image, text, etc.).",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "The field's internal name. This is valid for comparisons and unique in the structured content.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.CustomField",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "CustomField"
        }
      },
      "CustomValue" : {
        "properties" : {
          "data" : {
            "description" : "The field's content for simple types.",
            "type" : "object"
          },
          "data_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "geo" : {
            "$ref" : "#/components/schemas/Geo"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.CustomValue",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "CustomValue"
        }
      },
      "EmailAddress" : {
        "description" : "A list of the user's email addresses, with one optionally marked as primary.",
        "properties" : {
          "emailAddress" : {
            "description" : "The email address.",
            "type" : "string"
          },
          "id" : {
            "description" : "The email address's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "primary" : {
            "description" : "A flag that indicates whether this is the main email address of the user/organization.",
            "type" : "boolean"
          },
          "type" : {
            "description" : "The email address's type.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.EmailAddress",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "EmailAddress"
        }
      },
      "Geo" : {
        "description" : "A point determined by latitude and longitude.",
        "properties" : {
          "latitude" : {
            "description" : "The latitude of a point in space.",
            "format" : "double",
            "type" : "number"
          },
          "longitude" : {
            "description" : "The longitude of a point in space.",
            "format" : "double",
            "type" : "number"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Geo",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Geo"
        }
      },
      "OrganizationBrief" : {
        "description" : "A list of the user's organizations.",
        "properties" : {
          "id" : {
            "description" : "The organization's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The organization's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "roleBriefs" : {
            "description" : "A list of the user's roles.",
            "items" : {
              "$ref" : "#/components/schemas/RoleBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.OrganizationBrief",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "OrganizationBrief"
        }
      },
      "Phone" : {
        "description" : "A list of the user's phone numbers, with one optionally marked as primary.",
        "properties" : {
          "extension" : {
            "description" : "The phone number's extension.",
            "type" : "string"
          },
          "id" : {
            "description" : "The phone number's ID.",
            "format" : "int64",
            "type" : "integer"
          },
          "phoneNumber" : {
            "description" : "The phone number without its extension.",
            "type" : "string"
          },
          "phoneType" : {
            "description" : "The phone number's type.",
            "type" : "string"
          },
          "primary" : {
            "description" : "A flag that identifies whether this is the main phone number of the user/organization.",
            "type" : "boolean"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Phone",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Phone"
        }
      },
      "PostalAddress" : {
        "description" : "A list of user's postal addresses, with one optionally marked as primary.",
        "properties" : {
          "addressCountry" : {
            "description" : "The address's country (e.g., USA).",
            "type" : "string"
          },
          "addressCountry_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "addressLocality" : {
            "description" : "The address's locality (e.g., city).",
            "type" : "string"
          },
          "addressRegion" : {
            "description" : "The address's region (e.g., state).",
            "type" : "string"
          },
          "addressType" : {
            "description" : "The address's type.",
            "type" : "string"
          },
          "id" : {
            "description" : "The address's ID.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "The address's name.",
            "type" : "string"
          },
          "postalCode" : {
            "description" : "The address's postal code (e.g., zip code).",
            "type" : "string"
          },
          "primary" : {
            "description" : "A flag that identifies whether this is the main address of the user/organization.",
            "type" : "boolean"
          },
          "streetAddressLine1" : {
            "description" : "The street address's first line (e.g., 1600 Amphitheatre Pkwy.).",
            "type" : "string"
          },
          "streetAddressLine2" : {
            "description" : "The street address's second line.",
            "type" : "string"
          },
          "streetAddressLine3" : {
            "description" : "The street address's third line.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.PostalAddress",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "PostalAddress"
        }
      },
      "RoleBrief" : {
        "description" : "A list of the user's roles.",
        "properties" : {
          "id" : {
            "description" : "The role's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The role's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "object"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.RoleBrief",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "RoleBrief"
        }
      },
      "SiteBrief" : {
        "description" : "A list of the user's sites.",
        "properties" : {
          "descriptiveName" : {
            "description" : "The site's descriptive name.",
            "readOnly" : true,
            "type" : "string"
          },
          "descriptiveName_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "object"
          },
          "id" : {
            "description" : "The site's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The site's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "object"
          },
          "roleBriefs" : {
            "description" : "A list of the user's roles.",
            "items" : {
              "$ref" : "#/components/schemas/RoleBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.SiteBrief",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "SiteBrief"
        }
      },
      "UserAccount" : {
        "properties" : {
          "accountBriefs" : {
            "description" : "A list of the user's account.",
            "items" : {
              "$ref" : "#/components/schemas/AccountBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "readOnly" : true,
            "type" : "object"
          },
          "additionalName" : {
            "description" : "The user's additional name (e.g., middle name).",
            "type" : "string"
          },
          "alternateName" : {
            "description" : "The user's alias or screen name.",
            "type" : "string"
          },
          "birthDate" : {
            "description" : "The user's date of birth, in ISO 8601 format.",
            "format" : "date-time",
            "type" : "string"
          },
          "currentPassword" : {
            "type" : "string",
            "writeOnly" : true
          },
          "customFields" : {
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dashboardURL" : {
            "description" : "A relative URL to the user's dashboard.",
            "readOnly" : true,
            "type" : "string"
          },
          "dateCreated" : {
            "description" : "The creation date of the user's account.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time any field of the user's account was changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "emailAddress" : {
            "description" : "The user's main email address.",
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The optional external key of this user account.",
            "readOnly" : true,
            "type" : "string"
          },
          "familyName" : {
            "description" : "The user's surname (last name).",
            "type" : "string"
          },
          "givenName" : {
            "description" : "The user's first name.",
            "type" : "string"
          },
          "honorificPrefix" : {
            "description" : "The user's title (e.g., Dr., Mr., Mrs, Ms., etc.).",
            "type" : "string"
          },
          "honorificSuffix" : {
            "description" : "The user's suffix (e.g., II, Jr., PhD, etc.).",
            "type" : "string"
          },
          "id" : {
            "description" : "The user's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "image" : {
            "description" : "A relative URL to the user's profile image.",
            "readOnly" : true,
            "type" : "string"
          },
          "jobTitle" : {
            "description" : "The user's job title.",
            "type" : "string"
          },
          "keywords" : {
            "description" : "A list of keywords describing the user.",
            "items" : {
              "description" : "A list of keywords describing the user.",
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "lastLoginDate" : {
            "description" : "The last time the user logged in.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.",
            "readOnly" : true,
            "type" : "string"
          },
          "organizationBriefs" : {
            "description" : "A list of the user's organizations.",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "password" : {
            "type" : "string",
            "writeOnly" : true
          },
          "profileURL" : {
            "description" : "A relative URL to the user's profile.",
            "readOnly" : true,
            "type" : "string"
          },
          "roleBriefs" : {
            "description" : "A list of the user's roles.",
            "items" : {
              "$ref" : "#/components/schemas/RoleBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "siteBriefs" : {
            "description" : "A list of the user's sites.",
            "items" : {
              "$ref" : "#/components/schemas/SiteBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "userAccountContactInformation" : {
            "$ref" : "#/components/schemas/UserAccountContactInformation"
          },
          "userGroupBriefs" : {
            "description" : "A list of the user's userGroups.",
            "items" : {
              "$ref" : "#/components/schemas/UserGroupBrief"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.UserAccount",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "UserAccount"
        }
      },
      "UserAccountContactInformation" : {
        "description" : "The user's contact information.",
        "properties" : {
          "emailAddresses" : {
            "description" : "A list of the user's email addresses, with one optionally marked as primary.",
            "items" : {
              "$ref" : "#/components/schemas/EmailAddress"
            },
            "type" : "array"
          },
          "facebook" : {
            "description" : "The user's Facebook account.",
            "type" : "string"
          },
          "id" : {
            "description" : "The ID of the `contactInformation`.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "jabber" : {
            "description" : "The user's Jabber handle.",
            "type" : "string"
          },
          "postalAddresses" : {
            "description" : "A list of user's postal addresses, with one optionally marked as primary.",
            "items" : {
              "$ref" : "#/components/schemas/PostalAddress"
            },
            "type" : "array"
          },
          "skype" : {
            "description" : "The user's Skype handle.",
            "type" : "string"
          },
          "sms" : {
            "description" : "The user's SMS number.",
            "type" : "string"
          },
          "telephones" : {
            "description" : "A list of the user's phone numbers, with one optionally marked as primary.",
            "items" : {
              "$ref" : "#/components/schemas/Phone"
            },
            "type" : "array"
          },
          "twitter" : {
            "description" : "The user's Twitter handle.",
            "type" : "string"
          },
          "webUrls" : {
            "description" : "A list of the user's web URLs, with one optionally marked as primary.",
            "items" : {
              "$ref" : "#/components/schemas/WebUrl"
            },
            "type" : "array"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.UserAccountContactInformation",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "UserAccountContactInformation"
        }
      },
      "UserGroupBrief" : {
        "description" : "A list of the user's userGroups.",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.UserGroupBrief",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "UserGroupBrief"
        }
      },
      "WebUrl" : {
        "properties" : {
          "id" : {
            "description" : "The URL's ID.",
            "format" : "int64",
            "type" : "integer"
          },
          "primary" : {
            "description" : "A flag that identifies whether this is the main web address of the user/organization.",
            "type" : "boolean"
          },
          "url" : {
            "description" : "The absolute URL.",
            "type" : "string"
          },
          "urlType" : {
            "description" : "The URL's type.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.WebUrl",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "WebUrl"
        }
      },
      "Facet" : {
        "properties" : {
          "facetCriteria" : {
            "type" : "string"
          },
          "facetValues" : {
            "items" : {
              "$ref" : "#/components/schemas/FacetValue"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FacetValue" : {
        "properties" : {
          "numberOfOccurrences" : {
            "format" : "int32",
            "type" : "integer"
          },
          "term" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PageAccount" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Account"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "AccountRole" : {
        "properties" : {
          "accountId" : {
            "description" : "The primary key of the account that owns this role.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "description" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "roleId" : {
            "description" : "The primary key of the underlying system role.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.AccountRole",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "AccountRole"
        }
      },
      "PageAccountRole" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/AccountRole"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "PageEmailAddress" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/EmailAddress"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "HoursAvailable" : {
        "description" : "A list of hours when the organization is open. This follows the [`OpeningHoursSpecification`](https://www.schema.org/OpeningHoursSpecification) specification.",
        "properties" : {
          "closes" : {
            "description" : "The organization's closing time (in `HH:MM` format).",
            "type" : "string"
          },
          "dayOfWeek" : {
            "description" : "The day of the week.",
            "type" : "string"
          },
          "opens" : {
            "description" : "The organization's opening time (in `HH:MM` format).",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.HoursAvailable",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "HoursAvailable"
        }
      },
      "Location" : {
        "description" : "The organization's postal information (country and region).",
        "properties" : {
          "addressCountry" : {
            "description" : "The organization's country. This follows the [`addressCountry`](https://schema.org/addressCountry) specification.",
            "type" : "string"
          },
          "addressCountry_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "addressRegion" : {
            "description" : "The organization's region. This follows the [`addressRegion`](https://schema.org/addressRegion) specification.",
            "type" : "string"
          },
          "id" : {
            "description" : "The location's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Location",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Location"
        }
      },
      "Organization" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "readOnly" : true,
            "type" : "object"
          },
          "childOrganizations" : {
            "items" : {
              "$ref" : "#/components/schemas/Organization"
            },
            "type" : "array"
          },
          "comment" : {
            "description" : "The text of a comment associated with the organization.",
            "type" : "string"
          },
          "customFields" : {
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "dateCreated" : {
            "description" : "The organization's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The most recent time any of the organization's fields changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "externalReferenceCode" : {
            "description" : "The optional external key of this organization.",
            "type" : "string"
          },
          "id" : {
            "description" : "The organization's ID.",
            "type" : "string"
          },
          "image" : {
            "description" : "A relative URL to the organization's image.",
            "readOnly" : true,
            "type" : "string"
          },
          "keywords" : {
            "description" : "A list of keywords describing the organization.",
            "items" : {
              "description" : "A list of keywords describing the organization.",
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "name" : {
            "description" : "The organization's name.",
            "type" : "string"
          },
          "numberOfAccounts" : {
            "description" : "The number of this organization's associated accounts.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfOrganizations" : {
            "description" : "The number of this organization's child organizations.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfUsers" : {
            "description" : "The number of this organization's associated users.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "organizationAccounts" : {
            "items" : {
              "$ref" : "#/components/schemas/Account"
            },
            "type" : "array"
          },
          "organizationContactInformation" : {
            "$ref" : "#/components/schemas/OrganizationContactInformation"
          },
          "parentOrganization" : {
            "$ref" : "#/components/schemas/Organization"
          },
          "services" : {
            "description" : "A list of services the organization provides. This follows the [`Service`](https://www.schema.org/Service) specification.",
            "items" : {
              "$ref" : "#/components/schemas/Service"
            },
            "type" : "array"
          },
          "userAccounts" : {
            "items" : {
              "$ref" : "#/components/schemas/UserAccount"
            },
            "type" : "array"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Organization",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Organization"
        }
      },
      "OrganizationContactInformation" : {
        "description" : "The organization's contact information, which includes email addresses, postal addresses, phone numbers, and web URLs. This is modeled internally as a `Contact`.",
        "properties" : {
          "emailAddresses" : {
            "description" : "The organization's email addresses, with one optionally marked as primary.",
            "items" : {
              "$ref" : "#/components/schemas/EmailAddress"
            },
            "type" : "array"
          },
          "postalAddresses" : {
            "description" : "The organization's postal addresses, with one optionally marked as primary.",
            "items" : {
              "$ref" : "#/components/schemas/PostalAddress"
            },
            "type" : "array"
          },
          "telephones" : {
            "description" : "The organization's phones numbers, with one optionally marked as primary.",
            "items" : {
              "$ref" : "#/components/schemas/Phone"
            },
            "type" : "array"
          },
          "webUrls" : {
            "description" : "The organization's web URLs, with one optionally marked as primary.",
            "items" : {
              "$ref" : "#/components/schemas/WebUrl"
            },
            "type" : "array"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.OrganizationContactInformation",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "OrganizationContactInformation"
        }
      },
      "PageOrganization" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Organization"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Service" : {
        "description" : "A list of services the organization provides. This follows the [`Service`](https://www.schema.org/Service) specification.",
        "properties" : {
          "hoursAvailable" : {
            "description" : "A list of hours when the organization is open. This follows the [`OpeningHoursSpecification`](https://www.schema.org/OpeningHoursSpecification) specification.",
            "items" : {
              "$ref" : "#/components/schemas/HoursAvailable"
            },
            "type" : "array"
          },
          "serviceType" : {
            "description" : "The type of service the organization provides.",
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Service",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Service"
        }
      },
      "PageUserAccount" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/UserAccount"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "PagePhone" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Phone"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "PagePostalAddress" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/PostalAddress"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Creator" : {
        "properties" : {
          "additionalName" : {
            "description" : "The user's additional name, which can be used as a middle name.",
            "readOnly" : true,
            "type" : "string"
          },
          "contentType" : {
            "description" : "The type of the content.",
            "readOnly" : true,
            "type" : "string"
          },
          "familyName" : {
            "description" : "The user's surname (last name).",
            "readOnly" : true,
            "type" : "string"
          },
          "givenName" : {
            "description" : "The user's first name.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The user's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "image" : {
            "description" : "A relative URL to the user's profile image.",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.",
            "readOnly" : true,
            "type" : "string"
          },
          "profileURL" : {
            "description" : "A relative URL to the user's profile.",
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Creator",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Creator"
        }
      },
      "Role" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Block of actions that the user can perform with the roles.",
                "type" : "string"
              },
              "description" : "Block of actions that the user can perform with the roles.",
              "type" : "object"
            },
            "description" : "Block of actions that the user can perform with the roles.",
            "readOnly" : true,
            "type" : "object"
          },
          "availableLanguages" : {
            "description" : "A list of languages for which the role has a translation.",
            "items" : {
              "description" : "A list of languages for which the role has a translation.",
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "dateCreated" : {
            "description" : "The role's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The last time any of the role's fields were changed.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "description" : {
            "description" : "The role's description.",
            "readOnly" : true,
            "type" : "string"
          },
          "description_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "object"
          },
          "externalReferenceCode" : {
            "description" : "The portable ID of this role.",
            "type" : "string"
          },
          "id" : {
            "description" : "The role's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The role's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "object"
          },
          "roleType" : {
            "description" : "The role's type.",
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Role",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Role"
        }
      },
      "PageRole" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Role"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "PageSegment" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Segment"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Segment" : {
        "description" : "Represents a set of users that meet certain criteria. Segments may be used to create customized experiences for users.",
        "properties" : {
          "active" : {
            "description" : "A flag that indicates whether the segment is active.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "criteria" : {
            "description" : "The segment's criteria.",
            "readOnly" : true,
            "type" : "string"
          },
          "criteriaValue" : {
            "additionalProperties" : {
              "description" : "The segment's criteria in JSON.",
              "type" : "object"
            },
            "description" : "The segment's criteria in JSON.",
            "readOnly" : true,
            "type" : "object"
          },
          "dateCreated" : {
            "description" : "The segment's creation date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "description" : "The segment's most recent modification date.",
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The segment's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The segment's name.",
            "readOnly" : true,
            "type" : "string"
          },
          "siteId" : {
            "description" : "The ID of the segment's site.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "source" : {
            "description" : "The segment's source.",
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Segment",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "criteria", "name" ],
        "type" : "object",
        "xml" : {
          "name" : "Segment"
        }
      },
      "PageSegmentUser" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/SegmentUser"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "SegmentUser" : {
        "properties" : {
          "emailAddress" : {
            "description" : "The user's email address.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The user's ID.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "description" : "The user's full name.",
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.SegmentUser",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "SegmentUser"
        }
      },
      "Site" : {
        "properties" : {
          "availableLanguages" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Creator"
          },
          "description" : {
            "type" : "string"
          },
          "description_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "descriptiveName" : {
            "type" : "string"
          },
          "descriptiveName_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "friendlyUrlPath" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "membershipType" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "name_i18n" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "parentSiteId" : {
            "format" : "int64",
            "type" : "integer"
          },
          "sites" : {
            "items" : {
              "$ref" : "#/components/schemas/Site"
            },
            "type" : "array"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Site",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Site"
        }
      },
      "PageSite" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Site"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Subscription" : {
        "properties" : {
          "contentId" : {
            "type" : "object"
          },
          "contentType" : {
            "type" : "string"
          },
          "dateCreated" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "dateModified" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "frequency" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "siteId" : {
            "format" : "int64",
            "type" : "integer"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Subscription",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Subscription"
        }
      },
      "PageSubscription" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/Subscription"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Ticket" : {
        "properties" : {
          "expirationDate" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "extraInfo" : {
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "key" : {
            "readOnly" : true,
            "type" : "string"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.Ticket",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "xml" : {
          "name" : "Ticket"
        }
      },
      "MultipartBody" : {
        "properties" : {
          "values" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "UserGroup" : {
        "properties" : {
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "readOnly" : true,
            "type" : "object"
          },
          "description" : {
            "type" : "string"
          },
          "externalReferenceCode" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "usersCount" : {
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "x-class-name" : {
            "default" : "com.liferay.headless.admin.user.dto.v1_0.UserGroup",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object",
        "xml" : {
          "name" : "UserGroup"
        }
      },
      "PageUserGroup" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/UserGroup"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "PageWebUrl" : {
        "properties" : {
          "lastPage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/WebUrl"
            },
            "type" : "array"
          },
          "pageSize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facets" : {
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            },
            "type" : "array"
          },
          "actions" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "type" : "string"
              },
              "type" : "object"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      }
    }
  },
  "info" : {
    "description" : "A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.admin.user.client', and version '4.0.45'.",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title" : "Headless Admin User",
    "version" : "v1.0"
  },
  "openapi" : "3.0.1",
  "paths" : {
    "/v1.0/organizations/move-accounts/{sourceOrganizationId}/{targetOrganizationId}/by-external-reference-code" : {
      "patch" : {
        "operationId" : "patchOrganizationMoveAccountsByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "sourceOrganizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "targetOrganizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/organizations/{organizationId}/accounts/by-external-reference-code" : {
      "delete" : {
        "operationId" : "deleteOrganizationAccountsByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "post" : {
        "operationId" : "postOrganizationAccountsByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes an account.",
        "operationId" : "deleteAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "get" : {
        "operationId" : "getAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "patch" : {
        "description" : "Updates the account with information sent in the request body. Only the provided fields are updated.",
        "operationId" : "patchAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "put" : {
        "description" : "Replaces the account with information sent in the request body. Any missing fields are deleted unless they are required.",
        "operationId" : "putAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/organizations/move-accounts/{sourceOrganizationId}/{targetOrganizationId}" : {
      "patch" : {
        "operationId" : "patchOrganizationMoveAccounts",
        "parameters" : [ {
          "in" : "path",
          "name" : "sourceOrganizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "targetOrganizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/organizations/{organizationId}/accounts" : {
      "delete" : {
        "operationId" : "deleteOrganizationAccounts",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "get" : {
        "description" : "Retrieves the organization's members (accounts). Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getOrganizationAccountsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "post" : {
        "operationId" : "postOrganizationAccounts",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/accounts" : {
      "get" : {
        "description" : "Retrieves the accounts. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getAccountsPage",
        "parameters" : [ {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "post" : {
        "description" : "Creates a new account",
        "operationId" : "postAccount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/accounts/{accountId}" : {
      "delete" : {
        "description" : "Deletes an account.",
        "operationId" : "deleteAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "get" : {
        "operationId" : "getAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "patch" : {
        "description" : "Updates the account with information sent in the request body. Only the provided fields are updated.",
        "operationId" : "patchAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "put" : {
        "description" : "Replaces the account with information sent in the request body. Any missing fields are deleted unless they are required.",
        "operationId" : "putAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/accounts/export-batch" : {
      "post" : {
        "operationId" : "postAccountsPageExportBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/organizations/{organizationId}/accounts/export-batch" : {
      "post" : {
        "operationId" : "postOrganizationAccountsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/accounts/batch" : {
      "delete" : {
        "operationId" : "deleteAccountBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "post" : {
        "operationId" : "postAccountBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      },
      "put" : {
        "operationId" : "putAccountBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Account" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles" : {
      "get" : {
        "description" : "Gets the account's roles",
        "operationId" : "getAccountAccountRolesByExternalReferenceCodePage",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "keywords",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccountRole"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccountRole"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      },
      "post" : {
        "description" : "Adds a role for the account",
        "operationId" : "postAccountAccountRoleByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountRole"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountRole"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountRole"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountRole"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      }
    },
    "/v1.0/accounts/{accountId}/account-roles/{accountRoleId}/user-accounts/{userAccountId}" : {
      "delete" : {
        "description" : "Unassigns account users to the account role",
        "operationId" : "deleteAccountAccountRoleUserAccountAssociation",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "accountRoleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      },
      "post" : {
        "description" : "Assigns account users to the account role",
        "operationId" : "postAccountAccountRoleUserAccountAssociation",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "accountRoleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      }
    },
    "/v1.0/accounts/{accountId}/account-roles" : {
      "get" : {
        "description" : "Gets the account's roles",
        "operationId" : "getAccountAccountRolesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "keywords",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccountRole"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccountRole"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      },
      "post" : {
        "description" : "Adds a role for the account",
        "operationId" : "postAccountAccountRole",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountRole"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountRole"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountRole"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountRole"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-email-address/{emailAddress}" : {
      "delete" : {
        "description" : "Unassigns account users by email address from the account role",
        "operationId" : "deleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "accountRoleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "emailAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      },
      "post" : {
        "description" : "Assigns account users by email address to the account role",
        "operationId" : "postAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "accountRoleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "emailAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}/account-roles" : {
      "get" : {
        "description" : "Gets a user's account roles by their email address from an account by external reference code",
        "operationId" : "getAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "emailAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccountRole"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccountRole"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Unassigns account users by external reference code from the account role",
        "operationId" : "deleteAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "accountRoleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      },
      "post" : {
        "description" : "Assigns account users by external reference code to the account role",
        "operationId" : "postAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "accountRoleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}/account-roles" : {
      "get" : {
        "description" : "Gets a user's account roles by their external reference code from an account by external reference code",
        "operationId" : "getAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccountRole"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAccountRole"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      }
    },
    "/v1.0/accounts/{accountId}/account-roles/export-batch" : {
      "post" : {
        "operationId" : "postAccountAccountRolesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "keywords",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      }
    },
    "/v1.0/accounts/{accountId}/account-roles/batch" : {
      "post" : {
        "operationId" : "postAccountAccountRoleBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AccountRole" ]
      }
    },
    "/v1.0/organizations/{organizationId}/email-addresses" : {
      "get" : {
        "description" : "Retrieves the organization's email addresses.",
        "operationId" : "getOrganizationEmailAddressesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageEmailAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageEmailAddress"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "EmailAddress" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/email-addresses" : {
      "get" : {
        "description" : "Retrieves the user's email addresses.",
        "operationId" : "getUserAccountEmailAddressesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageEmailAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageEmailAddress"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "EmailAddress" ]
      }
    },
    "/v1.0/email-addresses/{emailAddressId}" : {
      "get" : {
        "description" : "Retrieves the email address.",
        "operationId" : "getEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "emailAddressId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailAddress"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "EmailAddress" ]
      }
    },
    "/v1.0/organizations/{organizationId}/email-addresses/export-batch" : {
      "post" : {
        "operationId" : "postOrganizationEmailAddressesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "EmailAddress" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/email-addresses/export-batch" : {
      "post" : {
        "operationId" : "postUserAccountEmailAddressesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "EmailAddress" ]
      }
    },
    "/v1.0/openapi.{type}" : {
      "get" : {
        "operationId" : "getOpenAPI",
        "parameters" : [ {
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/yaml" : { }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations/{organizationId}" : {
      "delete" : {
        "operationId" : "deleteAccountByExternalReferenceCodeOrganization",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "post" : {
        "operationId" : "postAccountByExternalReferenceCodeOrganization",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations" : {
      "get" : {
        "description" : "Retrieves the account's organizations. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getAccountByExternalReferenceCodeOrganizationsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/accounts/{accountId}/organizations" : {
      "get" : {
        "description" : "Retrieves the account's organizations. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getAccountOrganizationsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/organizations/{organizationId}/child-organizations" : {
      "get" : {
        "description" : "Retrieves the parent organization's child organizations. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getOrganizationChildOrganizationsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/organizations/{organizationId}/user-accounts/by-email-address" : {
      "delete" : {
        "description" : "Removes users from an organization by their email addresses",
        "operationId" : "deleteUserAccountsByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "post" : {
        "description" : "Assigns users to an organization by their email addresses",
        "operationId" : "postUserAccountsByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "organizationRoleIds",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/organizations/{organizationId}/user-accounts/by-email-address/{emailAddress}" : {
      "delete" : {
        "description" : "Removes a user from an organization by their email address",
        "operationId" : "deleteUserAccountByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "emailAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "post" : {
        "description" : "Assigns a user to an organization by their email address",
        "operationId" : "postUserAccountByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "emailAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/organizations/{parentOrganizationId}/organizations" : {
      "get" : {
        "description" : "Retrieves the parent organization's child organizations. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getOrganizationOrganizationsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "parentOrganizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/organizations/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Deletes an organization.",
        "operationId" : "deleteOrganizationByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "get" : {
        "operationId" : "getOrganizationByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "patch" : {
        "description" : "Updates the organization with information sent in the request body. Only the provided fields are updated.",
        "operationId" : "patchOrganizationByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "put" : {
        "description" : "Replaces the organization with information sent in the request body. Any missing fields are deleted unless they are required.",
        "operationId" : "putOrganizationByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/accounts/{accountId}/organizations/{organizationId}" : {
      "delete" : {
        "operationId" : "deleteAccountOrganization",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "post" : {
        "operationId" : "postAccountOrganization",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/organizations" : {
      "get" : {
        "description" : "Retrieves the organizations. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getOrganizationsPage",
        "parameters" : [ {
          "in" : "query",
          "name" : "flatten",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "post" : {
        "description" : "Creates a new organization",
        "operationId" : "postOrganization",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/organizations/{organizationId}" : {
      "delete" : {
        "description" : "Deletes an organization.",
        "operationId" : "deleteOrganization",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "get" : {
        "description" : "Retrieves the organization.",
        "operationId" : "getOrganization",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "patch" : {
        "description" : "Updates the organization with the information sent in the request body. Fields not present in the request body are left unchanged.",
        "operationId" : "patchOrganization",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "put" : {
        "description" : "Replaces the organization with information sent in the request body. Any missing fields are deleted unless they are required.",
        "operationId" : "putOrganization",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/accounts/{accountId}/organizations/export-batch" : {
      "post" : {
        "operationId" : "postAccountOrganizationsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/organizations/export-batch" : {
      "post" : {
        "operationId" : "postOrganizationsPageExportBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/organizations/batch" : {
      "delete" : {
        "operationId" : "deleteOrganizationBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "post" : {
        "operationId" : "postOrganizationBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      },
      "put" : {
        "operationId" : "putOrganizationBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Organization" ]
      }
    },
    "/v1.0/phones/{phoneId}" : {
      "get" : {
        "description" : "Retrieves the phone number.",
        "operationId" : "getPhone",
        "parameters" : [ {
          "in" : "path",
          "name" : "phoneId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Phone"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Phone"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Phone" ]
      }
    },
    "/v1.0/organizations/{organizationId}/phones" : {
      "get" : {
        "description" : "Retrieves the organization's phone numbers.",
        "operationId" : "getOrganizationPhonesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePhone"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePhone"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Phone" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/phones" : {
      "get" : {
        "description" : "Retrieves the user's phone numbers.",
        "operationId" : "getUserAccountPhonesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePhone"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePhone"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Phone" ]
      }
    },
    "/v1.0/organizations/{organizationId}/phones/export-batch" : {
      "post" : {
        "operationId" : "postOrganizationPhonesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Phone" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/phones/export-batch" : {
      "post" : {
        "operationId" : "postUserAccountPhonesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Phone" ]
      }
    },
    "/v1.0/accounts/{accountId}/postal-addresses" : {
      "get" : {
        "description" : "Retrieves the account's postal addresses.",
        "operationId" : "getAccountPostalAddressesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePostalAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePostalAddress"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "PostalAddress" ]
      }
    },
    "/v1.0/organizations/{organizationId}/postal-addresses" : {
      "get" : {
        "description" : "Retrieves the organization's postal addresses.",
        "operationId" : "getOrganizationPostalAddressesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePostalAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePostalAddress"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "PostalAddress" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/postal-addresses" : {
      "get" : {
        "description" : "Retrieves the user's postal addresses.",
        "operationId" : "getUserAccountPostalAddressesPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePostalAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePostalAddress"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "PostalAddress" ]
      }
    },
    "/v1.0/postal-addresses/{postalAddressId}" : {
      "get" : {
        "description" : "Retrieves the postal address.",
        "operationId" : "getPostalAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "postalAddressId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostalAddress"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostalAddress"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "PostalAddress" ]
      }
    },
    "/v1.0/organizations/{organizationId}/postal-addresses/export-batch" : {
      "post" : {
        "operationId" : "postOrganizationPostalAddressesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "PostalAddress" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/postal-addresses/export-batch" : {
      "post" : {
        "operationId" : "postUserAccountPostalAddressesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "PostalAddress" ]
      }
    },
    "/v1.0/accounts/{accountId}/postal-addresses/export-batch" : {
      "post" : {
        "operationId" : "postAccountPostalAddressesPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "PostalAddress" ]
      }
    },
    "/v1.0/roles/{roleId}/association/user-account/{userAccountId}/organization/{organizationId}" : {
      "delete" : {
        "description" : "Unassociates an organization role with a user account",
        "operationId" : "deleteOrganizationRoleUserAccountAssociation",
        "parameters" : [ {
          "in" : "path",
          "name" : "roleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Role" ]
      },
      "post" : {
        "description" : "Associates a organization role with a user account",
        "operationId" : "postOrganizationRoleUserAccountAssociation",
        "parameters" : [ {
          "in" : "path",
          "name" : "roleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Role" ]
      }
    },
    "/v1.0/roles/{roleId}/association/user-account/{userAccountId}" : {
      "delete" : {
        "description" : "Unassociates a role with a user account",
        "operationId" : "deleteRoleUserAccountAssociation",
        "parameters" : [ {
          "in" : "path",
          "name" : "roleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Role" ]
      },
      "post" : {
        "description" : "Associates a role with a user account",
        "operationId" : "postRoleUserAccountAssociation",
        "parameters" : [ {
          "in" : "path",
          "name" : "roleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Role" ]
      }
    },
    "/v1.0/roles/{roleId}/association/user-account/{userAccountId}/site/{siteId}" : {
      "delete" : {
        "description" : "Unassociates a site role with a user account",
        "operationId" : "deleteSiteRoleUserAccountAssociation",
        "parameters" : [ {
          "in" : "path",
          "name" : "roleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Role" ]
      },
      "post" : {
        "description" : "Associates a site role with a user account",
        "operationId" : "postSiteRoleUserAccountAssociation",
        "parameters" : [ {
          "in" : "path",
          "name" : "roleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Role" ]
      }
    },
    "/v1.0/roles/{roleId}" : {
      "get" : {
        "description" : "Retrieves the role.",
        "operationId" : "getRole",
        "parameters" : [ {
          "in" : "path",
          "name" : "roleId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Role"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Role"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Role" ]
      }
    },
    "/v1.0/roles" : {
      "get" : {
        "description" : "Retrieves the portal instance's roles. Results can be paginated.",
        "operationId" : "getRolesPage",
        "parameters" : [ {
          "in" : "query",
          "name" : "types",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageRole"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageRole"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Role" ]
      }
    },
    "/v1.0/roles/export-batch" : {
      "post" : {
        "operationId" : "postRolesPageExportBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "types",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Role" ]
      }
    },
    "/v1.0/sites/{siteId}/user-accounts/{userAccountId}/segments" : {
      "get" : {
        "description" : "Gets a user's segments. The set of available headers are: Accept-Language (string), Host (string), User-Agent (string), X-Browser (string), X-Cookies (collection string), X-Device-Brand (string), X-Device-Model (string), X-Device-Screen-Resolution-Height (double), X-Device-Screen-Resolution-Width (double), X-Last-Sign-In-Date-Time (date time) and X-Signed-In (boolean). Local date will be always present in the request.",
        "operationId" : "getSiteUserAccountSegmentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSegment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSegment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Segment" ]
      }
    },
    "/v1.0/sites/{siteId}/segments" : {
      "get" : {
        "description" : "Gets a site's segments.",
        "operationId" : "getSiteSegmentsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSegment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSegment"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Segment" ]
      }
    },
    "/v1.0/sites/{siteId}/segments/export-batch" : {
      "post" : {
        "operationId" : "postSiteSegmentsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Segment" ]
      }
    },
    "/v1.0/segments/{segmentId}/user-accounts" : {
      "get" : {
        "description" : "Gets a segment's users.",
        "operationId" : "getSegmentUserAccountsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "segmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSegmentUser"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSegmentUser"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "SegmentUser" ]
      }
    },
    "/v1.0/sites/{siteId}" : {
      "get" : {
        "operationId" : "getSite",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Site" ]
      }
    },
    "/v1.0/my-user-account/sites" : {
      "get" : {
        "operationId" : "getMyUserAccountSitesPage",
        "parameters" : [ {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSite"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSite"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Site" ]
      }
    },
    "/v1.0/sites/by-friendly-url-path/{friendlyUrlPath}" : {
      "get" : {
        "operationId" : "getSiteByFriendlyUrlPath",
        "parameters" : [ {
          "in" : "path",
          "name" : "friendlyUrlPath",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Site"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Site" ]
      }
    },
    "/v1.0/my-user-account/subscriptions/{subscriptionId}" : {
      "delete" : {
        "operationId" : "deleteMyUserAccountSubscription",
        "parameters" : [ {
          "in" : "path",
          "name" : "subscriptionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Subscription" ]
      },
      "get" : {
        "operationId" : "getMyUserAccountSubscription",
        "parameters" : [ {
          "in" : "path",
          "name" : "subscriptionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Subscription"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Subscription"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Subscription" ]
      }
    },
    "/v1.0/my-user-account/subscriptions" : {
      "get" : {
        "operationId" : "getMyUserAccountSubscriptionsPage",
        "parameters" : [ {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSubscription"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageSubscription"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Subscription" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/email-verification-ticket" : {
      "get" : {
        "description" : "Retrieves the user's email verification ticket.",
        "operationId" : "getUserAccountEmailVerificationTicket",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ticket"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ticket"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Ticket" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/password-reset-ticket" : {
      "get" : {
        "description" : "Retrieves the user's password reset ticket.",
        "operationId" : "getUserAccountPasswordResetTicket",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ticket"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ticket"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Ticket" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts" : {
      "get" : {
        "description" : "Gets the users assigned to an account",
        "operationId" : "getAccountUserAccountsByExternalReferenceCodePage",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "post" : {
        "description" : "Creates a user and assigns them to the account",
        "operationId" : "postAccountUserAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/accounts/{accountId}/user-accounts/by-email-address" : {
      "delete" : {
        "description" : "Removes users from an account by their email addresses",
        "operationId" : "deleteAccountUserAccountsByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "post" : {
        "description" : "Assigns users to an account by their email addresses",
        "operationId" : "postAccountUserAccountsByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "accountRoleIds",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/accounts/{accountId}/user-accounts/by-email-address/{emailAddress}" : {
      "delete" : {
        "description" : "Removes a user from an account by their email address",
        "operationId" : "deleteAccountUserAccountByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "emailAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "post" : {
        "description" : "Assigns a user to an account by their email address",
        "operationId" : "postAccountUserAccountByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "emailAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/organizations/{organizationId}/user-accounts" : {
      "get" : {
        "description" : "Retrieves the organization's members (users). Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getOrganizationUserAccountsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "operationId" : "deleteUserAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "get" : {
        "operationId" : "getUserAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "put" : {
        "operationId" : "putUserAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/user-accounts" : {
      "get" : {
        "description" : "Retrieves the user accounts. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getUserAccountsPage",
        "parameters" : [ {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "post" : {
        "description" : "Creates a new user account",
        "operationId" : "postUserAccount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/accounts/{accountId}/user-accounts" : {
      "get" : {
        "description" : "Gets the users assigned to an account",
        "operationId" : "getAccountUserAccountsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "post" : {
        "description" : "Creates a user and assigns them to the account",
        "operationId" : "postAccountUserAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/my-user-account" : {
      "get" : {
        "description" : "Retrieves information about the user who made the request.",
        "operationId" : "getMyUserAccount",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/sites/{siteId}/user-accounts" : {
      "get" : {
        "description" : "Retrieves the site members' user accounts. Results can be paginated, filtered, searched, and sorted.",
        "operationId" : "getSiteUserAccountsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}" : {
      "delete" : {
        "description" : "Deletes the user account",
        "operationId" : "deleteUserAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "get" : {
        "description" : "Retrieves the user account.",
        "operationId" : "getUserAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "patch" : {
        "description" : "Updates the user account with information sent in the request body. Only the provided fields are updated.",
        "operationId" : "patchUserAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "put" : {
        "description" : "Replaces the user account with information sent in the request body. Any missing fields are deleted unless they are required.",
        "operationId" : "putUserAccount",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccount"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccount"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/image" : {
      "post" : {
        "operationId" : "postUserAccountImage",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "description" : "Removes a user by their external reference code from an account by external reference code",
        "operationId" : "deleteAccountByExternalReferenceCodeUserAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "post" : {
        "description" : "Assigns a user by their external reference code to an account by external reference code",
        "operationId" : "postAccountByExternalReferenceCodeUserAccountByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountExternalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address" : {
      "delete" : {
        "description" : "Removes users from an account by their email addresses",
        "operationId" : "deleteAccountUserAccountsByExternalReferenceCodeByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "post" : {
        "description" : "Assigns users to an account by their email addresses",
        "operationId" : "postAccountUserAccountsByExternalReferenceCodeByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}" : {
      "delete" : {
        "description" : "Removes a user from an account by external reference code by their email address",
        "operationId" : "deleteAccountUserAccountByExternalReferenceCodeByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "emailAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "post" : {
        "description" : "Assigns a user to an account by external reference code by their email address",
        "operationId" : "postAccountUserAccountByExternalReferenceCodeByEmailAddress",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "emailAddress",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/organizations/{organizationId}/user-accounts/export-batch" : {
      "post" : {
        "operationId" : "postOrganizationUserAccountsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/accounts/{accountId}/user-accounts/export-batch" : {
      "post" : {
        "operationId" : "postAccountUserAccountsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/accounts/{accountId}/user-accounts/batch" : {
      "post" : {
        "operationId" : "postAccountUserAccountBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/sites/{siteId}/user-accounts/export-batch" : {
      "post" : {
        "operationId" : "postSiteUserAccountsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "siteId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/user-accounts/export-batch" : {
      "post" : {
        "operationId" : "postUserAccountsPageExportBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/user-accounts/batch" : {
      "delete" : {
        "operationId" : "deleteUserAccountBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "post" : {
        "operationId" : "postUserAccountBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      },
      "put" : {
        "operationId" : "putUserAccountBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserAccount" ]
      }
    },
    "/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}" : {
      "delete" : {
        "operationId" : "deleteUserGroupByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "get" : {
        "operationId" : "getUserGroupByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "patch" : {
        "operationId" : "patchUserGroupByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "put" : {
        "operationId" : "putUserGroupByExternalReferenceCode",
        "parameters" : [ {
          "in" : "path",
          "name" : "externalReferenceCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      }
    },
    "/v1.0/user-groups/{userGroupId}" : {
      "delete" : {
        "operationId" : "deleteUserGroup",
        "parameters" : [ {
          "in" : "path",
          "name" : "userGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "get" : {
        "operationId" : "getUserGroup",
        "parameters" : [ {
          "in" : "path",
          "name" : "userGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "patch" : {
        "operationId" : "patchUserGroup",
        "parameters" : [ {
          "in" : "path",
          "name" : "userGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "put" : {
        "operationId" : "putUserGroup",
        "parameters" : [ {
          "in" : "path",
          "name" : "userGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/user-groups" : {
      "get" : {
        "description" : "Retrieves the user's user groups.",
        "operationId" : "getUserUserGroups",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserGroup"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserGroup"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      }
    },
    "/v1.0/user-groups/{userGroupId}/user-group-users" : {
      "delete" : {
        "operationId" : "deleteUserGroupUsers",
        "parameters" : [ {
          "in" : "path",
          "name" : "userGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "post" : {
        "operationId" : "postUserGroupUsers",
        "parameters" : [ {
          "in" : "path",
          "name" : "userGroupId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "application/xml" : {
              "schema" : {
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { },
              "application/xml" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      }
    },
    "/v1.0/user-groups" : {
      "get" : {
        "operationId" : "getUserGroupsPage",
        "parameters" : [ {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserGroup"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageUserGroup"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "post" : {
        "operationId" : "postUserGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      }
    },
    "/v1.0/user-groups/export-batch" : {
      "post" : {
        "operationId" : "postUserGroupsPageExportBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      }
    },
    "/v1.0/user-groups/batch" : {
      "delete" : {
        "operationId" : "deleteUserGroupBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "post" : {
        "operationId" : "postUserGroupBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      },
      "put" : {
        "operationId" : "putUserGroupBatch",
        "parameters" : [ {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "UserGroup" ]
      }
    },
    "/v1.0/organizations/{organizationId}/web-urls" : {
      "get" : {
        "description" : "Retrieves the organization's URLs.",
        "operationId" : "getOrganizationWebUrlsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWebUrl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWebUrl"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WebUrl" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/web-urls" : {
      "get" : {
        "description" : "Retrieves the user's URLs.",
        "operationId" : "getUserAccountWebUrlsPage",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWebUrl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageWebUrl"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WebUrl" ]
      }
    },
    "/v1.0/web-urls/{webUrlId}" : {
      "get" : {
        "description" : "Retrieves the web URL.",
        "operationId" : "getWebUrl",
        "parameters" : [ {
          "in" : "path",
          "name" : "webUrlId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebUrl"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebUrl"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WebUrl" ]
      }
    },
    "/v1.0/organizations/{organizationId}/web-urls/export-batch" : {
      "post" : {
        "operationId" : "postOrganizationWebUrlsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "organizationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WebUrl" ]
      }
    },
    "/v1.0/user-accounts/{userAccountId}/web-urls/export-batch" : {
      "post" : {
        "operationId" : "postUserAccountWebUrlsPageExportBatch",
        "parameters" : [ {
          "in" : "path",
          "name" : "userAccountId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "callbackURL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "contentType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "fieldNames",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "WebUrl" ]
      }
    }
  },
  "servers" : [ {
    "url" : "http://localhost:8080/o/headless-admin-user/"
  } ]
}